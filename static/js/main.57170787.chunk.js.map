{"version":3,"sources":["components/Header.js","components/UnauthedLayout.js","components/HomePage.js","../../../libs/mdb-firebase/index.js","scripts/connect-firebase.js","components/ScenarioEditor/BasicInfo.js","components/ScenarioEditor/ScenarioItem.js","../../../libs/scenario-data/constants.js","../../../libs/scenario-data/traumaScenarioV2MetaData.js","components/ScenarioEditor/Steplist.js","components/ScenarioEditor/Vitals.js","components/ScenarioEditor/Sample.js","components/ScenarioEditor/ScenarioForm.js","components/ScenarioEditor/ScenariosList.js","components/ClassCodes/ClassCode.js","components/ClassCodes/ClassCodesList.js","scripts/id-util.js","components/MDBForm/SearchResults.js","components/MDBForm/FormItem.js","components/MDBForm/FormBlock.js","components/MDBForm/MDBForm.js","components/MDBForm/MDBFormList.js","components/MDBForm/ActionAssociations.js","App.js","index.js"],"names":["Header","useContext","AuthContext","currentUser","signOutUser","history","useHistory","location","useLocation","className","onClick","push","pathname","type","goBack","UnauthedLayout","props","children","HomePage","to","firebaseApp","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","auth","firestore","verifyDocument","collectionId","documentName","a","collection","doc","get","document","data","publishDocument","documentObject","set","console","log","getDocument","deleteDocument","delete","getCollection","docs","map","item","BasicInfo","active","scenario","edit","info","pt","id","classnames","defaultValue","name","instructorInformation","dispatchInfo","sceneAssessment","placeholder","maxTime","patientInformation","moulage","position","actions","age","weight","height","ScenarioHeader","label","Assessment","findings","assessmentFindings","ScenarioItem","ANSWER","ASSESS","HEADING","INTERV","ONE","OOM","PROMPT","PROMPT_SET","REQURED","CHECKLIST_META_DATA","tabLabel","INTV_META_DATA","selectionType","promptSet","prompt","scenarioData","filter","e","includes","Steplist","VitalsBox","header","Vital","vitalSigns","Vitals","SAMPLE","S","A","M","P","L","E","COLLECTION_ID","ScenarioForm","scenarioId","match","params","asTemplate","useState","setScenario","activeTab","setActiveTab","isActiveTab","isEdit","formEl","useRef","useEffect","then","result","catch","error","blankTrauma","submitForm","ref","form","current","value","alert","trim","window","confirm","processForm","input","path","newScenario","JSON","parse","stringify","split","isNaN","parseInt","ListItem","remove","index","scenarioType","ScenariosList","scenarios","setScenarios","LOADING","listIndex","deleteScenario","newList","slice","splice","ClassCode","classCode","assignment","setAssignment","originalId","assignmentTitle","checklist","orderRequired","err","processAssignment","assignmentObj","i","checked","order","handleSubmit","title","assignmentTasks","assignments","isChecked","forEach","orderNum","num","defaultChecked","ClassCodesList","codes","setCodes","handleDelete","newGroups","indexOf","assessmentIds","idList","intv","sort","one","two","localeCompare","matchesLabel","str","matchArr","toLowerCase","matchesChecklist","SearchResults","list","setVal","onMouseOver","v","target","innerText","onMouseLeave","FormItem","query","setQuery","textRef","deleteSelf","parentNode","getChecked","meta","contraReqOrder","pos","contraindicated","required","getPos","block","onChange","autoComplete","FormBlock","MDBFormContext","criticalActions","numGreen","setNumGreen","numYellow","setNumYellow","numRed","setNumRed","numFindings","setNumFindings","numNotes","setNumNotes","lessGreen","lessYellow","lessRed","lessFindings","lessNotes","beforeRef","afterRef","duringRef","setInput","Error","standard","minimal","notes","protocol","when","before","after","during","Array","React","createContext","FormRoot","mdbForm","setMDBForm","numBlocks","setNumBlocks","mdbFormId","formRef","res","scenarioName","Provider","scan","object","associations","blocks","deepCopy","isArray","obj","arr","node","nodeName","MDBFormListItem","MDBFormList","formsList","setFormsList","ele","getMatchingPrompts","allInterventions","prompts","getAllInterventions","flattenedIds","matchingPrompts","curr","relatedForm","ActionAssociations","formId","setPrompts","associationsRef","setTimeout","parent","child","tagName","App","exact","component","authFlowLayout","MDBForm","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.57170787.chunk.js","sourcesContent":["import { useHistory, useLocation } from 'react-router-dom';\r\nimport { useContext } from \"react\"; \r\nimport { AuthContext } from \"@meddbriefer/mdb-auth\";\r\n\r\nconst Header = () => {\r\n  const { currentUser, signOutUser } = useContext(AuthContext);\r\n  let history = useHistory();\r\n  let location = useLocation();\r\n\r\n  return (\r\n    <div className=\"title-bar\">\r\n      <h1 onClick={() => history.push('/')}>MedDBriefer</h1>\r\n\r\n      {location.pathname !== '/' && \r\n      <button type=\"button\" className=\"back-bttn\" onClick={() => history.goBack()}>Back</button>}\r\n\r\n      {currentUser && \r\n      <button type=\"button\" className=\"sign-out-bttn\" onClick={() => signOutUser()}>Sign out</button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import Header from \"./Header\"\r\n\r\nconst UnauthedLayout = (props) => {\r\n    return (\r\n        <>\r\n        <Header />\r\n        {props.children}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UnauthedLayout","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport Header from './Header'\r\n\r\nconst HomePage = () => {\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <div className=\"nav-wrapper\">\r\n        <Link to=\"/scenarios\">\r\n          <div className=\"home-nav-button\">Scenario Forms</div>\r\n        </Link>\r\n        <Link to=\"/class-codes-list/\">\r\n          <div className=\"home-nav-button\">Class Codes</div>\r\n        </Link>\r\n        <Link to=\"/debriefer-entry-list/\">\r\n          <div className=\"home-nav-button\">Debriefer Entry</div>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HomePage","import firebase from 'firebase/app'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\"\r\n\r\nexport const firebaseCfg = {\r\n    apiKey: \"AIzaSyBOgWAbXUGckpad2sk0IUo00hZsV4WxG0E\",\r\n    authDomain: \"meddbriefer-68cd4.firebaseapp.com\",\r\n    projectId: \"meddbriefer-68cd4\",\r\n    storageBucket: \"meddbriefer-68cd4.appspot.com\",\r\n    messagingSenderId: \"1087114796018\",\r\n    appId: \"1:1087114796018:web:679fbab38dbf78af0ce96b\",\r\n    measurementId: \"G-Q7QZKC9KHW\"\r\n}\r\n\r\n// don't reinitialize app if it already exists\r\nconst firebaseApp = !firebase.apps.length ? firebase.initializeApp(firebaseCfg) : firebase.app()\r\n\r\nexport const auth = firebaseApp.auth()\r\nexport const db = firebaseApp.firestore()\r\n","import { db } from \"@meddbriefer/mdb-firebase\";\r\n\r\n// Check if a document with the given name already exists\r\nexport const verifyDocument = async (collectionId, documentName) => {\r\n    let document = await db.collection(collectionId).doc(documentName).get();\r\n    return document.data() != null;\r\n};\r\n\r\n// Upload document object to database\r\nexport const publishDocument = async (collectionId, documentName, documentObject) => {\r\n    await db.collection(collectionId).doc(documentName).set(documentObject);\r\n    console.log(`Successfully published '${documentName}'.`);\r\n};\r\n\r\n// Pull document from database as object\r\nexport const getDocument = async (collectionId, documentName) => {\r\n    let document = await db.collection(collectionId).doc(documentName).get();\r\n    return document.data();\r\n};\r\n\r\n// Permanently delete document\r\nexport const deleteDocument = async (collectionId, documentName) => {\r\n    await db.collection(collectionId).doc(documentName).delete();\r\n    console.log(`'${documentName}' permanently deleted.`);\r\n    return true;\r\n};\r\n\r\n// Pull collection from database as array of document objects\r\nexport const getCollection = async (collectionId) => {\r\n    let collection = await db.collection(collectionId).get();\r\n    return collection.docs.map(item => item.data());\r\n};","import classnames from 'classnames';\r\n\r\nconst BasicInfo = ({ active, scenario, edit }) => {\r\n\tconst info = scenario.info;\r\n  const pt = 'patientInformation';\r\n\treturn (\r\n\t\t<div id=\"basic-info\" className={classnames(\"info-wrapper\", {\"scenario-view-hidden\": !active})}>\r\n\t\t\t<h1>Basic Information:</h1>\r\n\t\t\t<label>\r\n\t\t\t\tScenario Title:\r\n\t\t\t\t<input id=\"name\" type=\"text\" defaultValue={edit ? scenario.name : ''} />\r\n\t\t\t</label>\r\n\r\n\t\t\t<label>\r\n\t\t\t\tInstructor Info:\r\n\t\t\t\t<textarea id=\"info-instructorInformation\" defaultValue={info.instructorInformation} />\r\n\t\t\t</label>\r\n\r\n\t\t\t<label>\r\n\t\t\t\tDispatch Info:<textarea id=\"info-dispatchInfo\" defaultValue={info.dispatchInfo} />\r\n\t\t\t</label>\r\n\r\n\t\t\t<label>\r\n\t\t\t\tScene assessment:<textarea id=\"info-sceneAssessment\" defaultValue={info.sceneAssessment} />\r\n\t\t\t</label>\r\n\r\n\t\t\t<label>\r\n\t\t\t\tMaximum time for scenario:<input id=\"info-maxTime\" type=\"number\" placeholder=\"minutes\" defaultValue={info.maxTime} />\r\n\t\t\t</label>\r\n\r\n\t\t\t<h1>Patient Info:</h1>\r\n\t\t\t<div id=\"pt-info\">\r\n\t\t\t\t<label>\r\n\t\t\t\t\tMoulage:<input type=\"text\" id={`info-${pt}-moulage`} defaultValue={info.patientInformation.moulage} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tPosition:<input type=\"text\" id={`info-${pt}-position`} defaultValue={info.patientInformation.position} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tActions:<input type=\"text\" id={`info-${pt}-actions`} defaultValue={info.patientInformation.actions} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tAge:<input type=\"number\" id={`info-${pt}-age`} defaultValue={info.patientInformation.age} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tWeight (kg):<input type=\"text\" id={`info-${pt}-weight`} defaultValue={info.patientInformation.weight} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tHeight:<input type=\"text\" id={`info-${pt}-height`} defaultValue={info.patientInformation.height} />\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BasicInfo;\r\n","const ScenarioItem = ({item, scenario}) => {\r\n  return (\r\n    item.type === \"heading\" \r\n    ? <ScenarioHeader item={item} />\r\n    : <div className=\"step-item\"><Assessment item={item} scenario={scenario} /></div>\r\n  );\r\n};\r\n\r\nconst ScenarioHeader = ({item}) => {\r\n  return <div className=\"list-item header-item\">{item.label}</div>;\r\n};\r\n\r\nconst Assessment = ({item, scenario}) => {\r\n\tconst findings = scenario.assessmentFindings\r\n  return (\r\n    <label>\r\n      {`'${item.label}':`}\r\n      <input\r\n        type=\"text\"\r\n        id={`assessmentFindings-${item.id}`}\r\n        placeholder=\"leave blank if N/A or unremarkable\"\r\n        defaultValue={findings[item.id]}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ScenarioItem;\r\n","// some constants for types so we can prevent typos\r\nexport const ANSWER = \"answer\"\r\nexport const ASSESS = \"assessment\"\r\nexport const CB = \"checkbox\"\r\nexport const CL_PROMPT = \"checklist-prompt\"\r\nexport const CRIT_FAIL = \"critical-criteria\"\r\nexport const HEADING = \"heading\" //not a leaf node, simply a step which has child steps\r\nexport const INTERV = \"intervention\" // an action performed on the patient\r\nexport const INTV_FORM = \"intervention-form\"\r\nexport const NONE = \"none\"\r\nexport const ONE = \"one\"\r\nexport const OOM = \"one-or-more\"\r\nexport const OPTION = \"option\"\r\nexport const PHASE = \"phase\"\r\nexport const PROMPT = \"prompt\"\r\nexport const PROMPT_SET = \"prompt-set\"\r\nexport const REQURED = \"required-action\"   // an action the EMT performs, but not on the patient\r\nexport const SUB_PHASE = \"sub-phase\"\r\n","\r\nimport {\r\n    ANSWER,\r\n    ASSESS,\r\n    CL_PROMPT,\r\n    HEADING,\r\n    INTERV,\r\n    NONE,\r\n    ONE,\r\n    OOM,\r\n    PHASE,\r\n    PROMPT_SET,\r\n    PROMPT,\r\n    REQURED,\r\n    SUB_PHASE\r\n} from \"./constants.js\"\r\n\r\nexport const CHECKLIST_META_DATA = [\r\n    { id: \"heading-bsi\", type: HEADING, label: \"BSI\" },\r\n    { id: \"required-action-apply-ppe\", type: REQURED, label: \"Takes or verbalizes appropriate PPE precautions.\" },\r\n\r\n    { id: \"heading-scene-size-up\", type: HEADING, label: \"Scene Size-Up\" },\r\n    { id: \"assess-scene-safety\", type: ASSESS, label: \"Determines the scene/situation is safe\", tabLabel: \"Scene Safety\" },\r\n    { id: \"assess-injury-mechanism\", type: ASSESS, label: \"Determines the mechanism of injury/nature of illness\", tabLabel: \"Mechanism of Injury\" },\r\n    { id: \"assess-num-patients\", type: ASSESS, label: \"Determines the number of patients\", tabLabel: \"Num Patients\" },\r\n    { id: \"assess-need-additional-help\", type: ASSESS, label: \"Requests additional help if necessary\", tabLabel: \"Additional Help\" },\r\n    { id: \"required-action-considers-stabilize-spine\", type: REQURED, label: \"Considers stabilization of spine\" },\r\n\r\n    { id: \"heading-primary-survey\", type: HEADING, label: \"Primary Survey/Resuscitation\" },\r\n\r\n    { id: \"assess-patient-condition\", type: ASSESS, label: \"States or requests general impression\", tabLabel: \"General Impression\" },\r\n    { id: \"assess-loc\", type: ASSESS, label: \"Determines responsiveness/level of consciousness\", tabLabel: \"LOC\" },\r\n    { id: \"assess-life-threats\", type: ASSESS, label: \"Determines chief complaint/apparent life-threats\", tabLabel: \"Life Threats\" },\r\n    { id: \"heading-airway\", type: HEADING, label: \"Airway\" },\r\n    { id: \"assess-airway\", type: ASSESS, label: \"Assesses airway\", tabLabel: \"Airway\" },\r\n    { id: \"assess-response-airway-mgmt\", type: ASSESS, label: \"Assesses patient's response to airway management\", tabLabel: \"Airway Mgmt Response\" },\r\n    { id: \"heading-breathing\", type: HEADING, label: \"Breathing\" },\r\n    { id: \"assess-breathing\", type: ASSESS, label: \"Assesses breathing\", tabLabel: \"Breathing\" },\r\n    { id: \"assess-response-breathing-mgmt\", type: ASSESS, label: \"Assesses patient’s response to breathing management\", tabLabel: \"Breathing Mgmt Response\" },\r\n    { id: \"heading-circulation\", type: HEADING, label: \"Circulation\" },\r\n    { id: \"assess-pulse\", type: ASSESS, label: \"Checks pulse\", tabLabel: \"Pulse\" },\r\n    { id: \"assess-skin\", type: ASSESS, label: \"Assesses skin (color, temperature, condition)\", tabLabel: \"Skin\" },\r\n    { id: \"assess-major-bleeding\", type: ASSESS, label: \"Checks for major bleeding\", tabLabel: \"Major Bleeding\" },\r\n    { id: \"assess-response-bleeding-mgmt\", type: ASSESS, label: \"Assesses patient's response to managing severe bleeding\", tabLabel: \"Major Bleeding Mgmt Response\" },\r\n    // { id: \"transport-decision\", type: HEADING, label: \"Transport Decision\" },\r\n    { id: \"heading-history-taking\", type: HEADING, label: \"History Taking\" },\r\n    { id: \"required-action-obtains-vitals\", type: REQURED, label: \"Obtains (or directs assistant to obtain) baseline vital signs\" },\r\n    { id: \"required-action-attempt-obtain-sample\", type: REQURED, label: \"Attempts to obtain SAMPLE history\" },\r\n    { id: \"assess-opqrst-info\", type: ASSESS, label: \"Attempts to obtain OPQRST information\", tabLabel: \"OPQRST\" },\r\n\r\n    { id: \"heading-secondary-assessment\", type: HEADING, label: \"Secondary Assessment\" },\r\n    { id: \"cl-prompt-general-state-looking-listening-feeling\", type: CL_PROMPT, label: \"Prompt students to state what they are looking/listening/feeling for throughout.\" },\r\n    { id: \"required-action-remove-patient-clothing-as-needed\", type: REQURED, label: \"Removes clothing as needed\" },\r\n\r\n    { id: \"heading-head\", type: HEADING, label: \"Head\" },\r\n    { id: \"assess-inspects-head\", type: ASSESS, label: \"Inspects the head\", tabLabel: \"Inspect Head\" },\r\n    { id: \"assess-palpate-skull\", type: ASSESS, label: \"Palpates the skull\", tabLabel: \"Palpate Skull\" },\r\n    { id: \"assess-eyes-reactiveness\", type: ASSESS, label: \"Assesses eyes for reactiveness\", tabLabel: \"PERRL\" },\r\n    { id: \"assess-eyes-ears-nose-mouth\", type: ASSESS, label: \"Assesses eyes, ears, nose, mouth\", tabLabel: \"Head Fluids\" },\r\n\r\n    { id: \"heading-neck\", type: HEADING, label: \"Neck\" },\r\n    { id: \"assess-trachea\", type: ASSESS, label: \"Inspects position of trachea\", tabLabel: \"Trachea\" },\r\n    { id: \"assess-jugular\", type: ASSESS, label: \"Inspects jugular veins\", tabLabel: \"Jugular\" },\r\n    { id: \"assess-palpate-cervical-spine\", type: ASSESS, label: \"Palpates cervical spine\", tabLabel: \"Assess C-Spine\" },\r\n\r\n    { id: \"heading-shoulders\", type: HEADING, label: \"Shoulders\" },\r\n    { id: \"assess-check-shoulders\", type: ASSESS, label: \"Checks if stable and intact\", tabLabel: \"Check Shoulders\" },\r\n\r\n    { id: \"heading-clavicle\", type: HEADING, label: \"Clavicle\" },\r\n    { id: \"assess-inspect-clavicle\", type: ASSESS, label: \"Checks if stable and intact\", tabLabel: \"Checks Clavicle\" },\r\n\r\n    { id: \"heading-chest\", type: HEADING, label: \"Chest\" },\r\n    { id: \"assess-inspect-chest\", type: ASSESS, label: \"Inspects Chest\", tabLabel: \"Inspects Chest\" },\r\n    { id: \"assess-palpate-chest\", type: ASSESS, label: \"Palpates chest\", tabLabel: \"Palpate Chest\" },\r\n    { id: \"assess-auscultate-chest\", type: ASSESS, label: \"Auscultates chest\", tabLabel: \"Auscultate Chest\" },\r\n\r\n    { id: \"heading-abdomen-pelvis\", type: HEADING, label: \"Abdomen/pelvis\" },\r\n    { id: \"assess-inspects-abdomen\", type: ASSESS, label: \"Inspects abdomen\", tabLabel: \"Inspects Abdomen\" },\r\n    { id: \"assess-palpate-abdomen\", type: ASSESS, label: \"Palpates abdomen\", tabLabel: \"Palpate Abdomen\" },\r\n    { id: \"assess-pelvis\", type: ASSESS, label: \"Assesses pelvis\", tabLabel: \"Pelvis\" },\r\n    { id: \"assess-genitalia-perineum\", type: ASSESS, label: \"Assesses genitalia/perineum as needed\", tabLabel: \"Genitalia/Perineum\" },\r\n\r\n    { id: \"heading-lower-extremities\", type: HEADING, label: \"Lower extremities\" },\r\n    { id: \"assess-legs-inspects\", type: ASSESS, label: \"Inspects lower extremities bilaterally\", tabLabel: \"Inspect Legs\" },\r\n    { id: \"assess-legs-motor-function\", type: ASSESS, label: \"Assesses motor function bilaterally\", tabLabel: \"Legs Motor Func.\" },\r\n    { id: \"assess-legs-sensory-function\", type: ASSESS, label: \"Assesses sensory function bilaterally\", tabLabel: \"Legs Sensory Func.\" },\r\n    { id: \"assess-legs-pulse\", type: ASSESS, label: \"Checks pulse bilaterally\", tabLabel: \"Legs Pulse\" },\r\n\r\n    { id: \"heading-upper-extremities\", type: HEADING, label: \"Upper extremities\" },\r\n    { id: \"assess-arms-inspects\", type: ASSESS, label: \"Inspects upper extremities bilaterally\", tabLabel: \"Inspects Arms\" },\r\n    { id: \"assess-arms-motor-function\", type: ASSESS, label: \"Assesses motor function bilaterally\", tabLabel: \"Arms Motor Func.\" },\r\n    { id: \"assess-arms-sensory-function\", type: ASSESS, label: \"Assesses sensory function bilaterally\", tabLabel: \"Arms Sensory Func.\" },\r\n    { id: \"assess-arms-pulse\", type: ASSESS, label: \"Checks pulse bilaterally\", tabLabel: \"Arms Pulse\" },\r\n\r\n    { id: \"heading-posterior-thorax-lumbar-buttocks\", type: HEADING, label: \"Posterior thorax, lumbar, and buttocks\" },\r\n    { id: \"assess-posterior-inspects\", type: ASSESS, label: \"Inspects posterior thorax, lumbar, buttocks\", tabLabel: \"Inspects Posterior\" },\r\n    { id: \"assess-palpate-posterior-thorax\", type: ASSESS, label: \"Palpates posterior thorax/lumbar/buttocks\", tabLabel: \"Palpate Posterior/Thorax\" },\r\n\r\n    { id: \"heading-ongoing-mgmt-plan\", type: HEADING, label: \"Ongoing management plan\" },\r\n    { id: \"required-action-repeats-primary-assesment\", type: REQURED, label: \"Repeats primary assessment\" },\r\n    { id: \"required-action-repeats-secondary-assesment\", type: REQURED, label: \"Repeats secondary assessment\" },\r\n    { id: \"assess-cardiac-monitoring\", type: ASSESS, label: \"Performs cardiac monitoring\", tabLabel: \"Cardiac Monitoring\" },\r\n    { id: \"required-action-radio-receiving-facility\", type: REQURED, label: \"Radio report to receiving facility\" },\r\n]\r\n\r\n\r\nexport const INTV_META_DATA = [\r\n\r\n    { id: \"prompt-set-iv-details\", type: PROMPT_SET},\r\n        { id: \"prompt-num-ivs\", type: PROMPT, selectionType: ONE, label: \"How many IVs would you establish?\", promptSet: \"prompt-set-iv-details\"},\r\n            { id: \"answer-num-ivs-one\", type: ANSWER, label: \"one\", prompt: \"prompt-num-ivs\"},\r\n            { id: \"answer-num-ivs-two\", type: ANSWER, label: \"two\", prompt: \"prompt-num-ivs\" },\r\n            { id: \"answer-num-ivs-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-num-ivs\" },\r\n        { id: \"prompt-iv-size\", type: PROMPT, selectionType: ONE, label: \"What size IV?\", promptSet: \"prompt-set-iv-details\" },\r\n            { id: \"answer-iv-size-large-as-possible\", type: ANSWER, label: \"As large as possible\", prompt: \"prompt-iv-size\" },\r\n            { id: \"answer-iv-size-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-iv-size\" },\r\n\r\n    { id: \"prompt-set-orotracheal-intubation-details\", type: PROMPT_SET },\r\n        { id: \"prompt-intubation-tube-size\", type: PROMPT, selectionType: ONE, label: \"What size tube would you use?\", promptSet: \"prompt-set-orotracheal-intubation-details\" },\r\n            { id: \"answer-intubation-tube-size-option-1\", type: ANSWER, label: \"scenario-specific-option\", prompt: \"prompt-intubation-tube-size\" },\r\n            { id: \"answer-intubation-tube-size-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-intubation-tube-size\" },\r\n        { id: \"prompt-intubation-confirm-correct-tube-placement\", type: PROMPT, selectionType: OOM, label: \"What techniques will you use to confirm correct tube placement?\", promptSet: \"prompt-set-orotracheal-intubation-details\" },\r\n            { id: \"answer-inspect-tube-location\", type: ANSWER, label: \"Inspect tube location\", prompt: \"prompt-intubation-confirm-correct-tube-placement\" },\r\n            { id: \"answer-co2-capnography\", type: ANSWER, label: \"CO2 capnography\", prompt: \"prompt-intubation-confirm-correct-tube-placement\" },\r\n            { id: \"answer-auscultate-epigastrium\", type: ANSWER, label: \"Auscultate bilaterally and over epigastrium\", prompt: \"prompt-intubation-confirm-correct-tube-placement\" },\r\n            { id: \"answer-check-oxygen-saturation\", type: ANSWER, label: \"Check oxygen saturation\", prompt: \"prompt-intubation-confirm-correct-tube-placement\" },\r\n\r\n    { id: \"intv-open-airway-method-head-tilt\", type: INTERV, label: \"Head tilt\"  },\r\n    { id: \"intv-open-airway-method-jaw-thrust\", type: INTERV, label: \"Jaw thrust\" },\r\n    { id: \"intv-open-airway-method-modified-jaw-thrust\", type: INTERV, label: \"Modified jaw thrust\" },\r\n    { id: \"intv-open-airway-method-other\", type: INTERV, label: \"Other\" },\r\n\r\n    { id: \"intv-airway-patency-technique-suction-airway\", type: INTERV, label: \"Suction airway\" },\r\n    { id: \"intv-airway-patency-technique-remove-foreign-body-obstructions\", type: INTERV, label: \"Remove foreign body obstructions\" },\r\n\r\n    { id: \"prompt-set-airway-patency-suction\", type: PROMPT_SET },\r\n        { id: \"prompt-airway-patency-suction-device\", type: PROMPT, selectionType: ONE, label: \"What kind of suction catheter will you use?\", promptSet: \"prompt-set-airway-patency-suction\" },\r\n            { id: \"answer-airway-patency-suction-tip-catheter\", type: ANSWER, label: \"Tip Catheter\", prompt: \"prompt-airway-patency-suction-device\" },\r\n            { id: \"answer-airway-patency-suction-little-sucker\", type: ANSWER, label: \"Little Sucker\", prompt: \"prompt-airway-patency-suction-device\" },\r\n            { id: \"answer-airway-patency-suction-yankauer\", type: ANSWER, label: \"Yankauer\", prompt: \"prompt-airway-patency-suction-device\" },\r\n            { id: \"answer-airway-patency-suction-long-multiuse\", type: ANSWER, label: \"Long, multiuse\", prompt: \"prompt-airway-patency-suction-device\" },\r\n\r\n    { id: \"prompt-set-airway-patency-remove-foreign-body-obstructions\", type: PROMPT_SET },\r\n        { id: \"prompt-airway-patency-remove-foreign-body-obstructions-technique\", type: PROMPT, selectionType: OOM, label: \"What technique(s) will you try, and in what order?\", promptSet: \"prompt-set-airway-patency-remove-foreign-body-obstructions\" },\r\n            { id: \"answer-airway-patency-remove-foreign-body-obstructions-technique-manual\", type: ANSWER, label: \"Manual removal\", prompt: \"prompt-airway-patency-remove-foreign-body-obstructions-technique\" },\r\n            { id: \"answer-airway-patency-remove-foreign-body-obstructions-technique-magill-forceps\", type: ANSWER, label: \"Magill forceps assisted removal\", prompt: \"prompt-airway-patency-remove-foreign-body-obstructions-technique\" },\r\n\r\n    { id: \"intv-nasopharyngeal\", type: INTERV, label: \"Nasopharyngeal\" },\r\n    { id: \"intv-oropharyngeal\", type: INTERV, label: \"Oropharyngeal\" },\r\n\r\n    { id: \"prompt-set-basic-airway-reasoning\", type: PROMPT_SET },\r\n        { id: \"prompt-basic-airway-reasoning\", type: PROMPT, selectionType: OOM, label: \"When would you use a nasopharyngeal airway instead of an oropharyngeal airway?\", promptSet: \"prompt-set-basic-airway-reasoning\" },\r\n            { id: \"answer-basic-airway-reasoning-gag-reflex\", type: ANSWER, label: \"When patient has a gag reflex\", prompt: \"prompt-basic-airway-reasoning\" },\r\n            { id: \"answer-basic-airway-reasoning-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-basic-airway-reasoning\" },\r\n\r\n    // als patency interventions\r\n    { id: \"intv-airway-patency-technique-cricothyrotomy\", type: INTERV, label: \"Perform cricothyrotomy\" },\r\n\r\n    { id: \"prompt-set-airway-patency-cricothyrotomy\", type: PROMPT_SET },\r\n        { id: \"prompt-cricothyrotomy-type\", type: PROMPT, selectionType: ONE, label: \"Which type?\", promptSet: \"prompt-set-airway-patency-cricothyrotomy\" },\r\n            { id: \"answer-cricothyrotomy-type-percutaneous\", type: ANSWER, label: \"Percutaneous\", prompt: \"prompt-cricothyrotomy-type\" },\r\n            { id: \"answer-cricothyrotomy-type-surgical\", type: ANSWER, label: \"Surgical\", prompt: \"prompt-cricothyrotomy-type\" },\r\n\r\n    { id: \"intv-supraglottic\", type: INTERV, label: \"Supraglottic\" },\r\n    // als intubation\r\n    { id: \"intv-orotracheal-intubation-type-direct\", type: INTERV, label: \"Direct\" },\r\n    { id: \"intv-orotracheal-intubation-type-gum-elastic-bougie-assisted\", type: INTERV, label: \"Gum elastic bougie-assisted\" },\r\n    { id: \"intv-orotracheal-intubation-type-video-laryngoscopy\", type: INTERV, label: \"Video laryngoscopy\"  },\r\n    { id: \"intv-orotracheal-intubation-type-medication-facilitated\", type: INTERV, label: \"Medication Facilitated\"  },\r\n\r\n    { id: \"prompt-set-orotracheal-intubation-type-medication-facilitated\", type: PROMPT_SET },\r\n        { id: \"prompt-sedated-intubation-medication\", type: PROMPT, selectionType: ONE, label: \"What medication would you administer?\", promptSet: \"prompt-set-orotracheal-intubation-type-medication-facilitated\" },\r\n            { id: \"answer-sedated-intubation-medication-etomidate\", type: ANSWER, label: \"Etomidate\", prompt: \"prompt-sedated-intubation-medication\" },\r\n            { id: \"answer-sedated-intubation-medication-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-sedated-intubation-medication\" },\r\n        { id: \"prompt-sedated-intubation-dosage\", type: PROMPT, selectionType: ONE, label: \"What dose?\", promptSet: \"prompt-set-orotracheal-intubation-type-medication-facilitated\" },\r\n            { id: \"answer-sedated-intubation-dosage-less\", type: ANSWER, label: \"less\", prompt: \"prompt-sedated-intubation-dosage\" },\r\n            { id: \"answer-sedated-intubation-dosage-correct\", type: ANSWER, label: \"correct dosage\", prompt: \"prompt-sedated-intubation-dosage\" },\r\n            { id: \"answer-sedated-intubation-dosage-more\", type: ANSWER, label: \"more\", prompt: \"prompt-sedated-intubation-dosage\" },\r\n\r\n\r\n\r\n    { id: \"intv-ventilation-technique-bag-valve-mask\", type: INTERV, label: \"Bag-valve mask\" },\r\n    { id: \"intv-ventilation-technique-automatic-transport-ventilator\", type: INTERV, label: \"Automatic transport ventilator\" },\r\n\r\n\r\n    { id: \"prompt-set-ventilation-rate\", type: PROMPT_SET },\r\n        { id: \"prompt-ventilation-rate\", type: PROMPT, selectionType: ONE, label: \"At what rate will you ventilate the patient?\", promptSet: \"prompt-set-ventilation-rate\" },\r\n            { id: \"answer-ventilation-rate-10-12-bpm\", type: ANSWER, label: \"10-12 breaths/minute\", prompt: \"prompt-ventilation-rate\" },\r\n            { id: \"answer-ventilation-rate-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-ventilation-rate\" },\r\n\r\n    { id: \"intv-oxygen-therapy-device-non-rebreather-mask\", type: INTERV, label: \"Non-rebreather mask\" },\r\n    { id: \"intv-oxygen-therapy-device-nasal-cannula\", type: INTERV, label: \"Nasal cannula\" },\r\n\r\n    { id: \"prompt-set-oxygen-therapy-details\", type: PROMPT_SET },\r\n        { id: \"prompt-oxygen-therapy-flow-rate\", type: PROMPT, selectionType: ONE, label: \"Oxygen flow rate?\", promptSet: \"prompt-set-oxygen-therapy-details\" },\r\n            { id: \"answer-oxygen-therapy-flow-rate-2-6-lpm\", type: ANSWER, label: \"2-6 liters/min\", prompt: \"prompt-oxygen-therapy-flow-rate\" },\r\n            { id: \"answer-oxygen-therapy-flow-rate-15-lpm\", type: ANSWER, label: \"15 liters/min\", prompt: \"prompt-oxygen-therapy-flow-rate\" },\r\n            { id: \"answer-oxygen-therapy-flow-rate-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-oxygen-therapy-flow-rate\" },\r\n        { id: \"prompt-oxygen-therapy-target-saturation\", type: PROMPT, selectionType: ONE, label: \"What is your target oxygen saturation range?\", promptSet: \"prompt-set-oxygen-therapy-details\" },\r\n            { id: \"answer-oxygen-therapy-target-saturation-94-or-greater\", type: ANSWER, label: \"94 or greater\", prompt: \"prompt-oxygen-therapy-target-saturation\" },\r\n            { id: \"answer-oxygen-therapy-target-saturation-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-oxygen-therapy-target-saturation\" },\r\n\r\n\r\n    { id: \"intv-occlusive-dressing\", type: INTERV, label: \"Apply occlusive dressing to breathing-compromising wounds\" },\r\n    { id: \"intv-pleural-decompression\", type: INTERV, label: \"Perform pleural decompression\" },\r\n\r\n    { id: \"prompt-set-occlusive-dressing\", type: PROMPT_SET },\r\n        { id: \"prompt-occlusive-dressing-method\", type: PROMPT, selectionType: ONE, label: \"How would you create a release valve on an occlusive dressing?\", promptSet: \"prompt-set-occlusive-dressing\" },\r\n            { id: \"answer-occulative-dressing-method-leave-one-side-untaped\", type: ANSWER, label: \"Leave one side untaped\", prompt: \"prompt-occlusive-dressing-method\" },\r\n            { id: \"answer-occulative-dressing-method-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-occlusive-dressing-method\" },\r\n\r\n    { id: \"prompt-set-pleural-decompression\", type: PROMPT_SET, label: \"Pleural decompression\" },\r\n        { id: \"prompt-pleural-decompression-needle-placement-side-of-the-body\", type: PROMPT, selectionType: ONE, label: \"On which side of the body would you place the needle?\", promptSet: \"prompt-set-pleural-decompression\" },\r\n            { id: \"answer-pleural-decompression-needle-placement-side-of-the-body-right\", type: ANSWER, label: \"Right\", prompt: \"prompt-pleural-decompression-needle-placement-side-of-the-body\" },\r\n            { id: \"answer-pleural-decompression-needle-placement-side-of-the-body-left\", type: ANSWER, label: \"Left\", prompt: \"prompt-pleural-decompression-needle-placement-side-of-the-body\" },\r\n        { id: \"prompt-pleural-decompression-needle-placement-anatomical-landmark\", type: PROMPT, selectionType: OOM, label: \"At what anatomical landmark?\", promptSet: \"prompt-set-pleural-decompression\" },\r\n            { id: \"answer-pleural-decompression-needle-placement-anatomical-landmark-2nd-intercostal-space-mid-clavicular\", type: ANSWER, label: \"Second intercostal space mid-clavicular\", prompt: \"prompt-pleural-decompression-needle-placement-anatomical-landmark\" },\r\n            { id: \"answer-pleural-decompression-needle-placement-anatomical-landmark-4th-5th-intercostal-space\", type: ANSWER, label: \"Fourth/fifth intercostal space\", prompt: \"prompt-pleural-decompression-needle-placement-anatomical-landmark\" },\r\n            { id: \"answer-pleural-decompression-needle-placement-anatomical-landmark-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-pleural-decompression-needle-placement-anatomical-landmark\" },\r\n        { id: \"prompt-pleural-decompression-needle-size\", type: PROMPT, selectionType: ONE, label: \"What size needle do you want to use?\", promptSet: \"prompt-set-pleural-decompression\" },\r\n            { id: \"answer-pleural-decompression-needle-size-correct\", type: ANSWER, label: \"Correct answer\", prompt: \"prompt-pleural-decompression-needle-size\" },\r\n            { id: \"answer-pleural-decompression-needle-size-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-pleural-decompression-needle-size\" },\r\n\r\n\r\n    { id: \"intv-control-severe-bleeding-technique-direct-pressure\", type: INTERV, label: \"Apply direct pressure\" },\r\n    { id: \"intv-control-severe-bleeding-technique-tourniquet\", type: INTERV, label: \"Apply tourniquet\" },\r\n    { id: \"intv-control-severe-bleeding-technique-2nd-tourniquet\", type: INTERV, label: \"Apply second tourniquet\" },\r\n    { id: \"intv-control-severe-bleeding-technique-pressure-bandage\", type: INTERV, label: \"Apply pressure bandage\" },\r\n    { id: \"intv-control-severe-bleeding-technique-hemostatic-gauze\", type: INTERV, label: \"Apply hemostatic gauze\" },\r\n    { id: \"intv-control-severe-bleeding-technique-pack-wound-with-gauze\", type: INTERV, label: \"Pack wound with gauze\" },\r\n    { id: \"intv-control-severe-bleeding-technique-load-and-go\", type: INTERV, label: \"Load and go (if uncontrolled)\" },\r\n\r\n    { id: \"prompt-set-tourniquet\", type: PROMPT_SET },\r\n        { id: \"prompt-tourniquet-placement\", type: PROMPT, selectionType: ONE, label: \"Where would you place the tourniquet?\", promptSet: \"prompt-set-tourniquet\" },\r\n            { id: \"answer-tourniquet-placement-close-to-core-far-from-wound\", type: ANSWER, label: \"As far from wound and close to the core as possible\", prompt: \"prompt-tourniquet-placement\" },\r\n            { id: \"answer-tourniquet-placement-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-tourniquet-placement\" },\r\n        { id: \"prompt-tourniquet-stop-tightening-when\", type: PROMPT, selectionType: OOM, label: \"When do you know when to stop tightening the tourniquet?\", promptSet: \"prompt-set-tourniquet\" },\r\n            { id: \"answer-tourniquet-stop-tightening-when-bleeding-has-stopped\", type: ANSWER, label: \"When bleeding has stopped\", prompt: \"prompt-tourniquet-stop-tightening-when\" },\r\n            { id: \"answer-tourniquet-stop-tightening-when-distal-pulse-is-absent\", type: ANSWER, label: \"When distal pulse is absent\", prompt: \"prompt-tourniquet-stop-tightening-when\" },\r\n            { id: \"answer-tourniquet-stop-tightening-when-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-tourniquet-stop-tightening-when\" },\r\n\r\n    { id: \"prompt-set-2nd-tourniquet\", type: PROMPT_SET },\r\n        { id: \"prompt-2nd-tourniquet-placement\", type: PROMPT, selectionType: ONE, label: \"Where would you place the 2nd tourniquet?\", promptSet: \"prompt-set-2nd-tourniquet\" },\r\n            { id: \"answer-2nd-tourniquet-placement-adjacent-to-initial-tourniquet\", type: ANSWER, label: \"Adjacent to initial tourniquet\", prompt: \"prompt-2nd-tourniquet-placement\" },\r\n            { id: \"answer-2nd-tourniquet-placement-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-2nd-tourniquet-placement\" },\r\n\r\n\r\n    { id: \"intv-control-shock-technique-keep-patient-warm\", type: INTERV, label: \"Keep patient warm (e.g., apply blankets)\" },\r\n    { id: \"intv-control-shock-technique-administer-high-concentration-o2\", type: INTERV, label: \"Administer high concentration of oxygen\" },\r\n    { id: \"intv-control-shock-technique-place-patient-supine-position\", type: INTERV, label: \"Place or maintain patient in supine position\" },\r\n    { id: \"intv-control-shock-technique-administer-iv-boluses\", type: INTERV, label: \"Administer IV fluid resuscitation\" },\r\n\r\n    { id: \"prompt-set-control-shock-technique-administer-iv-boluses\", type: PROMPT_SET },\r\n        { id: \"prompt-control-shock-iv-fluid\", type: PROMPT, selectionType: ONE, label: \"What type of fluid?\", promptSet: \"prompt-set-control-shock-technique-administer-iv-boluses\" },\r\n            { id: \"answer-control-shock-iv-fluid-saline\", type: ANSWER, label: \"Normal saline\", prompt: \"prompt-control-shock-iv-fluid\" },\r\n            { id: \"answer-control-shock-iv-fluid-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-control-shock-iv-fluid\" },\r\n        { id: \"prompt-control-shock-iv-volume\", type: PROMPT, selectionType: ONE, label: \"At what volume?\", promptSet: \"prompt-set-control-shock-technique-administer-iv-boluses\" },\r\n            { id: \"answer-control-shock-iv-volume-20-cc-per-kilo\", type: ANSWER, label: \"20 cc/kilo\", prompt: \"prompt-control-shock-iv-volume\" },\r\n            { id: \"answer-control-shock-iv-volume-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-control-shock-iv-volume\" },\r\n        { id: \"prompt-control-shock-iv-target-bp\", type: PROMPT, selectionType: ONE, label: \"What is your target BP?\", promptSet: \"prompt-set-control-shock-technique-administer-iv-boluses\" },\r\n            { id: \"answer-control-shock-iv-target-bp-80-90\", type: ANSWER, label: \"SBP 80-90, if bleeding is controlled\", prompt: \"prompt-control-shock-iv-target-bp\" },\r\n            { id: \"answer-control-shock-iv-target-bp-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-control-shock-iv-target-bp\" },\r\n\r\n    { id: \"intv-transport-is-load-and-go\", type: INTERV, label: \"determines whether this is a load and go patient\" },\r\n    { id: \"prompt-set-transport-decisions\", type: PROMPT_SET },\r\n        { id: \"prompt-transport-is-load-and-go\", type: PROMPT, selectionType: ONE, label: \"Is this a “load and go” patient?\", promptSet: \"prompt-set-transport-decisions\" },\r\n            { id: \"answer-transport-is-load-and-go-yes\", type: ANSWER, label: \"Yes\", prompt: \"prompt-transport-is-load-and-go\" },\r\n            { id: \"answer-transport-is-load-and-go-no\", type: ANSWER, label: \"No\", prompt: \"prompt-transport-is-load-and-go\" },\r\n        { id: \"prompt-transport-facility-choice\", type: PROMPT, selectionType: ONE, label: \"What care facility will you transport the patient to?\", promptSet: \"prompt-set-transport-decisions\" },\r\n            { id: \"answer-transport-facility-choice-trauma-center\", type: ANSWER, label: \"Trauma center\", prompt: \"prompt-transport-facility-choice\" },\r\n            { id: \"answer-transport-facility-choice-closest\", type: ANSWER, label: \"Closest receiving facility\", prompt: \"prompt-transport-facility-choice\" },\r\n            { id: \"answer-transport-facility-choice-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-transport-facility-choice\" },\r\n        { id: \"prompt-transport-method\", type: PROMPT, selectionType: ONE, label: \"Would you transport this patient by air or ground?\", promptSet: \"prompt-set-transport-decisions\" },\r\n            { id: \"answer-transport-method-ambulance\", type: ANSWER, label: \"Ambulance\", prompt: \"prompt-transport-method\" },\r\n            { id: \"answer-transport-method-helicopter\", type: ANSWER, label: \"Helicopter\", prompt: \"prompt-transport-method\" },\r\n        { id: \"prompt-transport-lights-siren-decision\", type: PROMPT, selectionType: ONE, label: \"Would you use lights and sirens with this patient?\", promptSet: \"prompt-set-transport-decisions\" },\r\n            { id: \"answer-transport-lights-sirens-yes\", type: ANSWER, label: \"Yes\", prompt: \"prompt-transport-lights-siren-decision\" },\r\n            { id: \"answer-transport-lights-sirens-no\", type: ANSWER, label: \"No\", prompt: \"prompt-transport-lights-siren-decision\" },\r\n\r\n    { id: \"intv-spinal-immobilization-technique-manual-c-spine\", type: INTERV, label: \"Manual c-spine stabilization\" },\r\n    { id: \"intv-spinal-immobilization-technique-ked\", type: INTERV, label: \"Seated spinal motion restriction (KED)\" },\r\n    { id: \"intv-spinal-immobilization-technique-lbb\", type: INTERV, label: \"Supine long back board (LBB)\" },\r\n    { id: \"intv-spinal-immobilization-technique-cervical-collar\", type: INTERV, label: \"Cervical collar\" },\r\n    { id: \"intv-spinal-immobilization-technique-blocks\", type: INTERV, label: \"Cervical immobilization device (blocks)\" },\r\n\r\n    { id: \"intv-manage-secondary-injuries-technique-apply-dressings\", type: INTERV, label: \"Apply dressings\" },\r\n    { id: \"intv-manage-secondary-injuries-technique-splint-fractures\", type: INTERV, label: \"Splint fractures\" },\r\n    { id: \"intv-manage-secondary-injuries-technique-other\", type: INTERV, label: \"Other\" },\r\n\r\n    { id: \"intv-transfers-patient-method-walk-patient\", type: INTERV, label: \"Walk patient to ambulance\" },\r\n    { id: \"intv-transfers-patient-method-scoop-stretcher\", type: INTERV, label: \"Use scoop stretcher\" },\r\n    { id: \"intv-transfers-patient-method-transfer-to-stretcher-on-long-backboard\", type: INTERV, label: \"Transfer to stretcher on long backboard\" },\r\n    { id: \"intv-transfers-patient-method-other\", type: INTERV, label: \"Other\" },\r\n\r\n\r\n\r\n    { id: \"intv-reassess-vital-signs\", type: INTERV, label: \"Reassess vital signs\" },\r\n    { id: \"intv-replace-basic-airway-with-advanced-or-intubate\", type: INTERV, label: \"Replace basic airway with advanced airway, or intubate\" },\r\n    { id: \"intv-replace-bandages\", type: INTERV, label: \"Replace bandages\" },\r\n    { id: \"intv-replace-oxygen-tank\", type: INTERV, label: \"Replace oxygen tank\" },\r\n    { id: \"intv-adjust-iv-replace-bolus\", type: INTERV, label: \"Adjust IV, hang second bag\" },\r\n    { id: \"intv-turn-on-heat-in-ambulance\", type: INTERV, label: \"Turn on heat in ambulance\" },\r\n    // { id: \"intv-reassess-modify-interventions-other-options\", type: INTERV, label: \"other-options\" },\r\n\r\n    { id: \"prompt-set-reassess-vital-signs\", type: PROMPT_SET },\r\n        { id: \"prompt-reassess-vital-signs-frequency\", type: PROMPT, selectionType: ONE, label: \"How often will you reassess vitals?\", promptSet: \"prompt-set-reassess-vital-signs\" },\r\n            { id: \"answer-reassess-vital-signs-frequency-5-min\", type: ANSWER, label: \"Every 5 minutes\", prompt: \"prompt-reassess-vital-signs-frequency\" },\r\n            { id: \"answer-reassess-vital-signs-frequency-15-min\", type: ANSWER, label: \"Every 15 minutes\", prompt: \"prompt-reassess-vital-signs-frequency\" },\r\n            { id: \"answer-reassess-vital-signs-frequency-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-reassess-vital-signs-frequency\" },\r\n        { id: \"prompt-reassess-vital-signs-which-vitals\", type: PROMPT, selectionType: NONE, label: \"Which vitals would you like to reassess?\", promptSet: \"prompt-set-reassess-vital-signs\" },\r\n\r\n    { id: \"intv-establish-ivs\", type: INTERV, label: \"Establish IVs\" },\r\n    { id: \"intv-apply-bandages\", type: INTERV, label: \"Apply bandages\" },\r\n\r\n    { id: \"intv-pain-management-medication-fentanyl\", type: INTERV, label: \"Fentanyl\" },\r\n    { id: \"intv-pain-management-medication-morphine\", type: INTERV, label: \"Morphine\" },\r\n    // { id: \"intv-pain-management-medication-other\", type: INTERV, label: \"Other\" },\r\n\r\n    { id: \"prompt-set-pain-management-fentanyl-details\", type: PROMPT_SET },\r\n        { id: \"prompt-pain-management-medication-fentanyl-dosage\", type: PROMPT, selectionType: ONE, label: \"What dosage?\", promptSet: \"prompt-set-pain-management-fentanyl-details\" },\r\n            { id: \"answer-pain-management-fentanyl-dosage-less\", type: ANSWER, label: \"Less\", prompt: \"prompt-pain-management-medication-dosage\" },\r\n            { id: \"answer-pain-management-fentanyl-dosage-correct\", type: ANSWER, label: \"correct-dosage\", prompt: \"prompt-pain-management-medication-dosage\" },\r\n            { id: \"answer-pain-management-fentanyl-dosage-more\", type: ANSWER, label: \"More\", prompt: \"prompt-pain-management-medication-dosage\" },\r\n\r\n    { id: \"prompt-set-pain-management-morphine-details\", type: PROMPT_SET },\r\n        { id: \"prompt-pain-management-medication-morphine-dosage\", type: PROMPT, selectionType: ONE, label: \"What dosage?\", promptSet: \"prompt-set-pain-management-morphine-details\" },\r\n            { id: \"answer-pain-management-morphine-dosage-less\", type: ANSWER, label: \"Less\", prompt: \"prompt-pain-management-medication-dosage\" },\r\n            { id: \"answer-pain-management-morphine-dosage-correct\", type: ANSWER, label: \"correct-dosage\", prompt: \"prompt-pain-management-medication-dosage\" },\r\n            { id: \"answer-pain-management-morphine-dosage-more\", type: ANSWER, label: \"More\", prompt: \"prompt-pain-management-medication-dosage\" },\r\n\r\n    { id: \"prompt-set-manage-pain-details\", type: PROMPT_SET },\r\n        { id: \"prompt-pain-management-medication-min-bp\", type: PROMPT, selectionType: ONE, label: \"What is the minimum BP to administer pain medications?\", promptSet: \"prompt-set-manage-pain-details\" },\r\n            { id: \"answer-pain-management-medication-min-bp-correct\", type: ANSWER, label: \"correct-answer\", prompt: \"prompt-pain-management-medication-min-bp\" },\r\n            { id: \"answer-pain-management-medication-min-bp-other\", type: ANSWER, label: \"Other\", prompt: \"prompt-pain-management-medication-min-bp\" },\r\n        { id: \"prompt-pain-management-medication-administration-route\", type: PROMPT, selectionType: OOM, label: \"How would you administer this medication--through what route?\", promptSet: \"prompt-set-manage-pain-details\" },\r\n            { id: \"answer-pain-management-medication-administration-route-oral\", type: ANSWER, label: \"Oral\", prompt: \"prompt-pain-management-medication-administration-route\"},\r\n            { id: \"answer-pain-management-medication-administration-route-intranasal\", type: ANSWER, label: \"Intranasal\", prompt: \"prompt-pain-management-medication-administration-route\" },\r\n            { id: \"answer-pain-management-medication-administration-route-intraosseous\", type: ANSWER, label: \"Intraosseous\", prompt: \"prompt-pain-management-medication-administration-route\" },\r\n            { id: \"answer-pain-management-medication-administration-route-intramuscular\", type: ANSWER, label: \"Intramuscular\", prompt: \"prompt-pain-management-medication-administration-route\" },\r\n            { id: \"answer-pain-management-medication-administration-route-intravenous\", type: ANSWER, label: \"Intravenous\", prompt: \"prompt-pain-management-medication-administration-route\" },\r\n\r\n]\r\n","import ScenarioItem from \"./ScenarioItem.js\";\r\nimport { CHECKLIST_META_DATA } from \"@meddbriefer/scenario-data/traumaScenarioV2MetaData.js\";\r\nimport classnames from 'classnames';\r\n\r\nconst scenarioData = CHECKLIST_META_DATA.filter(e => !e.id.includes(\"critical\") && e.type !== \"checklist-prompt\");\r\n\r\nconst Steplist = ({ active, scenario }) => {\r\n\treturn (\r\n\t\t<div id=\"scenario-steps\" className={classnames({\"scenario-view-hidden\": !active})}>\r\n\t\t\t<h1>Scenario Items</h1>\r\n\t\t\t{scenarioData.map((item) => (\r\n\t\t\t\t<ScenarioItem key={item.id} item={item} scenario={scenario} />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Recursively get the nested assessment items\r\n// function getSteplistItems(item, array) {\r\n// \tfor (let step of item) {\r\n// \t\tif (step.type === 'heading' && step.children != null) {\r\n// \t\t\tlet assessCount = 0;\r\n// \t\t\tfor (let item of step.children) \r\n// \t\t\t\tif (item.type === 'assess') \r\n// \t\t\t\t\tassessCount += 1;\r\n\t\t\t\r\n// \t\t\tif (assessCount > 0 )\r\n// \t\t\t\tarray.push({ 'id': step.id, 'type': step.type, 'label': step.label });\r\n\r\n// \t\t\tgetSteplistItems(step.children, array);\r\n// \t\t} else if (step.type === 'assess') {\r\n// \t\t\tarray.push({ 'id': step.id, 'type': step.type, 'label': step.label });\r\n\r\n// \t\t\tif (step.children != null)\r\n// \t\t\t\tgetSteplistItems(step.children, array);\r\n// \t\t}\r\n// \t}\r\n\r\n// \treturn array;\r\n// }\r\n\r\nexport default Steplist;\r\n","import classnames from 'classnames';\r\n\r\nconst Vitals = ({ active, scenario }) => {\r\n\treturn (\r\n\t\t<div className={classnames(\"info-box vitals\", {\"scenario-view-hidden\": !active})}>\r\n\t\t\t<VitalsBox type=\"initial\" header=\"Initial\" scenario={scenario} />\r\n\t\t\t<VitalsBox type=\"good\" header=\"Good Reassessment\" scenario={scenario} />\r\n\t\t\t<VitalsBox type=\"bad\" header=\"Bad Reassessment\" scenario={scenario} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nconst VitalsBox = ({ scenario, header, type }) => {\r\n\treturn (\r\n\t\t<div className=\"vital-wrapper\">\r\n\t\t\t<h1> {`${header} Vitals:`} </h1>\r\n\t\t\t<div className=\"vitals-box\">\r\n\t\t\t\t<Vital label='BP' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='P' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='R' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='Skin' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='Spo2' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='ETCO2' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='GCS' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='Glucose' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='Pain' type={type} scenario={scenario} />\r\n\t\t\t\t<Vital label='Temp' type={type} scenario={scenario} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nfunction Vital ({scenario, label, type}) {\r\n\treturn (\r\n\t\t<label>\r\n\t\t\t{label}:\r\n\t\t\t<input\r\n\t\t\t\tid={`vitalSigns-${label}-${type}`}\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tdefaultValue={scenario.vitalSigns[label][type]}\r\n\t\t\t/>\r\n\t\t</label>\r\n\t);\r\n}\r\n\r\nexport default Vitals;\r\n","import classnames from 'classnames';\r\n\r\nconst SAMPLE = ({ active, scenario }) => {\r\n\tconst SAMPLE = scenario.SAMPLE;\r\n\treturn (\r\n\t\t<div className={classnames(\"info-box\", {\"scenario-view-hidden\": !active})} id=\"sample\">\r\n\t\t\t<h1>SAMPLE:</h1>\r\n\r\n\t\t\t<div className=\"sample\">\r\n\t\t\t\t<label>\r\n\t\t\t\t\tS:<input type=\"text\" id=\"SAMPLE-S\" defaultValue={SAMPLE.S} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tA:<input type=\"text\" id=\"SAMPLE-A\" defaultValue={SAMPLE.A} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tM:<input type=\"text\" id=\"SAMPLE-M\" defaultValue={SAMPLE.M} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tP:<input type=\"text\" id=\"SAMPLE-P\" defaultValue={SAMPLE.P} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tL:<input type=\"text\" id=\"SAMPLE-L\" defaultValue={SAMPLE.L} />\r\n\t\t\t\t</label>\r\n\t\t\t\t<label>\r\n\t\t\t\t\tE:<input type=\"text\" id=\"SAMPLE-E\" defaultValue={SAMPLE.E} />\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SAMPLE;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport classnames from 'classnames';\r\n\r\nimport {\r\n\tpublishDocument,\r\n\tgetDocument,\r\n\tverifyDocument,\r\n\tdeleteDocument\r\n} from \"../../scripts/connect-firebase.js\";\r\nimport blankTrauma from '../../data/blank-trauma.json';\r\nimport BasicInfo from \"./BasicInfo.js\";\r\nimport Steplist from \"./Steplist.js\";\r\nimport Vitals from \"./Vitals\";\r\nimport SAMPLE from \"./Sample.js\";\r\n\r\nconst COLLECTION_ID = 'scenarios';\r\n\r\nconst ScenarioForm = (props) => {\r\n\tconst { scenarioId } = props.match.params;\r\n\tconst { asTemplate } = props.match.params;\r\n\tconst [scenario, setScenario] = useState(); // current state of scenario form\r\n\tconst [activeTab, setActiveTab] = useState('basic-info'); // current view\r\n\tconst isActiveTab = (name) => name === activeTab;\r\n\tconst isEdit = !!scenarioId;\r\n\tconst formEl = useRef(null);\r\n\tlet history = useHistory();\r\n\r\n\t// Load and apply selected scenario\r\n\tuseEffect(() => {\r\n\t\tisEdit ? getDocument(COLLECTION_ID, scenarioId)\r\n\t\t\t.then((result) => { setScenario(result) })\r\n\t\t\t.catch((error) => {\tconsole.log(error) })\r\n\t\t: setScenario(blankTrauma);\r\n\t}, [scenarioId, isEdit]);\r\n\r\n\treturn (\r\n\t\t<div className=\"scenario-form-wrapper\">\r\n\t\t\t<nav id=\"tab-selector\">\r\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"basic-info\")})} \r\n\t\t\t\t\t onClick={() => setActiveTab('basic-info')}>Info</div>\r\n\r\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"sample\")})} \r\n\t\t\t\t\t onClick={() => setActiveTab('sample')}>Sample</div>\r\n\r\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"vitals\")})}\r\n\t\t\t\t\t onClick={() => setActiveTab('vitals')}>Vitals</div>\r\n\r\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"steplist\")})} \r\n\t\t\t\t\t onClick={() => setActiveTab('steplist')}>Steplist</div>\r\n\r\n\t\t\t\t<button type=\"submit\" id=\"submit-next\" onClick={() => submitForm()}>Submit →</button>\r\n\t\t\t</nav>\r\n\r\n\t\t\t<form id=\"scenario-form\" className=\"scenario-form\" ref={formEl}>\r\n\t\t\t\t{\r\n\t\t\t\tscenario ?\r\n\t\t\t\t<>\r\n\t\t\t\t\t<BasicInfo \tactive={isActiveTab('basic-info')} \tscenario={scenario} edit={isEdit} />\r\n\t\t\t\t\t<SAMPLE \tactive={isActiveTab('sample')} \t\tscenario={scenario} />\r\n\t\t\t\t\t<Vitals \tactive={isActiveTab('vitals')} \t\tscenario={scenario} />\r\n\t\t\t\t\t<Steplist \tactive={isActiveTab('steplist')}\tscenario={scenario} />\r\n\t\t\t\t</>\r\n\t\t\t\t: <p>Loading...</p> // While scenario is loading in\r\n\t\t\t\t}\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n\r\n\tasync function submitForm() {\r\n\t\tlet form = formEl.current;\r\n\r\n\t\tif (asTemplate === 'template' && form.name.value === scenario.name)\r\n\t\t{\r\n\t\t\talert('You can\\'t use the same name as the template!');\r\n\t\t}\r\n\t\telse if ( form.name.value == null || form.name.value.trim() === \"\" || ( await verifyDocument(COLLECTION_ID, form.name.value) && !isEdit ) ) \r\n\t\t{\r\n\t\t\t// If scenario exists and not in edit mode\r\n\t\t\talert('Scenario needs a new name!');\r\n\t\t}\r\n\t\telse if (window.confirm(\"Any empty items will be filled with default information. Submit?\"))\r\n\t\t{\r\n\t\t\tform = processForm(form);\r\n\t\t\t\r\n\t\t\t// If there's a name change\r\n\t\t\t(isEdit && form.name.value !== scenario.name && !asTemplate) && deleteDocument(COLLECTION_ID, scenario.name); \r\n\r\n\t\t\t// console.log(form);\r\n\t\t\tpublishDocument(COLLECTION_ID, form.name, form); // Create new\r\n\t\t\thistory.goBack(); // Send back once submitted\r\n\t\t} \r\n\t\telse \r\n\t\t{\r\n\t\t\tconsole.log(\"Submit cancelled.\");\r\n\t\t}\r\n\t}\r\n\r\n\tfunction processForm(data) {\r\n\t\tlet input, id, path, \r\n\t\tnewScenario = JSON.parse(JSON.stringify(scenario)); // deep copy of original format (for edits)\r\n\r\n\t\tfor(let item of data) {\r\n\t\t\tid = item.id;\r\n\t\t\tpath = id.split('-');\r\n\t\t\tinput = item.value;\r\n\r\n\t\t\t// Default assess case\r\n\t\t\tif (path[0] === 'assessmentFindings' && !input) \r\n\t\t\t\tinput = \"Unremarkable\";\r\n\r\n\t\t\tif (input) { // Don't process empty fields\r\n\t\t\t\t// Reconstruct assessmentFindings path after split\r\n\t\t\t\tif (path[0] === 'assessmentFindings') path = [path[0], id.split('assessmentFindings-')[1]];\r\n\r\n\t\t\t\t// Read numbers as numbers\r\n\t\t\t\tinput = isNaN(input) ? input : parseInt(input);\r\n\r\n\t\t\t\t// Handle different object depths\r\n\t\t\t\tswitch (path.length) {\r\n\t\t\t\t\tcase 1: newScenario[path[0]] = input; break;\r\n\t\t\t\t\tcase 2: newScenario[path[0]][path[1]] = input; break;\r\n\t\t\t\t\tcase 3: newScenario[path[0]][path[1]][path[2]] = input; break;\r\n\r\n\t\t\t\t\tdefault: console.log('Path length error:', path.length); break; // Log error\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn newScenario;\r\n\t}\r\n};\r\n\r\nexport default ScenarioForm;\r\n","import { React, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCollection, deleteDocument } from '../../scripts/connect-firebase';\r\nimport Header from '../Header';\r\n\r\nconst COLLECTION_ID = 'scenarios';\r\n\r\nconst ScenariosList = () => {\r\n\tconst [scenarios, setScenarios] = useState();\r\n\tconst LOADING = <p>Loading...</p>;\r\n\tlet listIndex = 0;\r\n\r\n\tuseEffect(() => {\r\n\t\tgetCollection(COLLECTION_ID)\r\n\t\t\t.then((result) => { setScenarios(result) })\r\n\t\t\t.catch((error) => { console.log(error) })\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Header />\r\n\r\n\t\t\t<div className=\"scenario-list\">\r\n\t\t\t\t<h1 id='scenario-list-title'>Scenario List</h1>\r\n\r\n\t\t\t\t<Link to='/scenario/' className=\"new-scenario-bttn list-scenario-item\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<h1>+</h1>\r\n\t\t\t\t\t\t<p>Create a New Scenario</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Link>\r\n\r\n\t\t\t\t{scenarios \r\n\t\t\t\t\t? scenarios.map((item) => (\r\n\t\t\t\t\t\t\titem && <ListItem item={item} key={`${item.name}-list`} remove={deleteScenario} index={listIndex++} />))\r\n\t\t\t\t \t: LOADING }\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n\r\n\tasync function deleteScenario(index) {\r\n\t\tlet id = scenarios[index].name;\r\n\t\tif( window.confirm('Are you sure you want to delete this scenario? This cannot be undone!') ) {\r\n\t\t\tawait deleteDocument(COLLECTION_ID, id);\r\n\t\t\tlet newList = scenarios.slice(); // deep copy\r\n\t\t\tnewList.splice(index, 1);\r\n\t\t\tsetScenarios( newList );\r\n\t\t} else {\r\n\t\t\tconsole.log('Delete of', id, 'cancelled');\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst ListItem = ({ item, remove, index }) => {\r\n\treturn (\r\n\t\t<div className=\"list-scenario-item\">\r\n\t\t\t<h1 id=\"title\">{item.name}</h1>\r\n\t\t\t<p>{item.scenarioType}</p>\r\n\t\t\t<p>Info: {item.info.instructorInformation ?? \"Not given.\"}</p>\r\n\r\n\t\t\t<Link to={`/scenario/${item.name}`} className=\"action-bttn\">Edit</Link>\r\n\t\t\t<Link to={`/scenario/${item.name}/template`} className=\"action-bttn\">Use as Template</Link>\r\n\t\t\t<button type=\"button\" className=\"action-bttn\" onClick={() => remove(index) }>Delete</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ScenariosList;\r\n","import { getCollection, \r\n        getDocument, \r\n        publishDocument,\r\n        verifyDocument,\r\n        deleteDocument } \r\nfrom '../../scripts/connect-firebase.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect, useRef } from 'react';\r\nimport Header from '../Header';\r\n\r\nconst COLLECTION_ID = 'class-codes';\r\n\r\nconst ClassCode = (props) => {\r\n    const { classCode } = props.match.params;\r\n    const [ scenarios, setScenarios ] = useState(null);\r\n    const [ assignment, setAssignment ] = useState(null);\r\n    const [ originalId, isEdit ] = [ classCode, !!classCode ];\r\n    const assignmentTitle = useRef(null);\r\n    const checklist = useRef(null);\r\n    const orderRequired = useRef(null);\r\n\tlet history = useHistory();\r\n    \r\n    useEffect(() => {\r\n        getCollection('scenarios')\r\n            .then((result) => { \r\n                setScenarios(result); // Load scenarios from db\r\n\r\n                classCode ? // Load assignment if an edit\r\n                getDocument(COLLECTION_ID, classCode)\r\n                    .then((result) => { \r\n                        setAssignment(result);\r\n                    })\r\n                    .catch((err) => console.log(err)) \r\n                : setAssignment([]);\r\n\r\n            })\r\n            .catch(() => console.log('Scenario loaded error') )\r\n    }, [classCode]);\r\n\r\n    const processAssignment = () => {\r\n        let form = checklist.current.children;\r\n        let assignmentObj = [];\r\n\r\n        // Get assignments and place in object\r\n        for(let i=0; i < form.length; i++){\r\n            if(form[i].children[0].checked)\r\n                assignmentObj.push({ // New objects\r\n                    id: form[i].children[0].value,\r\n                    order: parseInt(form[i].children[1].children[0].value) || (orderRequired.current.checked ? 1: -1)\r\n                });\r\n        }\r\n        \r\n        return assignmentObj;\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        let title = assignmentTitle.current.value;\r\n        \r\n        let assignmentTasks = processAssignment();\r\n\r\n        console.log(assignmentTasks);\r\n        \r\n        // Verify name isn't empty and doesn't already exists (prevent overwriting)\r\n        if ( title.trim() === '' || (await verifyDocument(COLLECTION_ID, title) && !isEdit) ) {\r\n            alert('Assignment needs a title!');\r\n            return;\r\n        }\r\n\r\n        (isEdit && originalId !== title) && deleteDocument(COLLECTION_ID, originalId);\r\n\r\n        await publishDocument( COLLECTION_ID, title, \r\n            { title: title, orderRequired: orderRequired.current.checked, assignments: assignmentTasks });\r\n\r\n        alert(`Published ${assignmentTitle.current.value}`);\r\n        history.push('/class-codes-list/');\r\n    };\r\n\r\n    const isChecked = (id) => {\r\n        let checked = false;\r\n        assignment?.assignments?.forEach(item => {\r\n            if(item.id === id) checked = true;\r\n        });\r\n        return checked;\r\n    };\r\n\r\n    const orderNum = (id) => {\r\n        let num = null;\r\n        assignment?.assignments?.forEach(item => {\r\n            if(item.id === id) num = item.order;\r\n        });\r\n        return num;\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div className=\"scenario-assignment\">\r\n            <h1>Class Code</h1>\r\n            {\r\n                assignment ? // Check if assignment loaded in\r\n                <>\r\n                <label className=\"assignment-title\">\r\n                    Title: <input type=\"text\" ref={assignmentTitle} defaultValue={classCode} /> \r\n                </label>\r\n\r\n                <div className=\"assignment-list\" ref={checklist}>\r\n                    {\r\n                        scenarios.map( (item) => (\r\n                            <label key={item.name} className=\"assignment-check-item\">\r\n                                <input type=\"checkbox\" value={item.name} defaultChecked={isChecked(item.name)}/>\r\n                                {item.name}\r\n\r\n                                <span>\r\n                                    # <input type=\"number\" defaultValue={orderNum(item.name)}/>\r\n                                </span>\r\n                            </label>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n                <label className=\"required-bttn\">\r\n                    Order required: <input type=\"checkbox\" ref={orderRequired} defaultChecked={assignment.orderRequired} />\r\n                </label>\r\n                </>\r\n                : <p>Loading...</p>\r\n            }\r\n            <button type=\"button\" onClick={() => handleSubmit()}>Submit</button>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ClassCode;","import { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { getCollection, deleteDocument } from '../../scripts/connect-firebase.js';\r\nimport Header from '../Header';\r\n\r\nconst COLLECTION_ID = 'class-codes';\r\n\r\nconst ClassCodesList = () => {\r\n    const [ codes, setCodes ] = useState(null);\r\n    \r\n    useEffect(() => {\r\n        getCollection(COLLECTION_ID)\r\n            .then((result) => { setCodes(result); })\r\n            .catch((err) => { console.log(err); })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div className=\"scenario-assignment-list\">\r\n            <h1>Class Codes</h1>\r\n            <Link to={`/class-codes/`} className=\"new-assignment-bttn scenario-assignment-list-item\">\r\n                <p>Create new class code +</p>\r\n            </Link>\r\n            {\r\n                codes &&\r\n                codes.map( item => (\r\n                    <ListItem item={item} key={item.title} remove={handleDelete} />\r\n                ))\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n\r\n    async function handleDelete(item) {\r\n        let id = item.title;    \r\n        if( window.confirm('Are you sure you want to permanetly delete this group? This cannot be undone!') ){\r\n            deleteDocument(COLLECTION_ID, id);\r\n            let newGroups = codes.slice();\r\n            newGroups.splice( newGroups.indexOf(item), 1);\r\n\r\n            setCodes(newGroups);\r\n        } else\r\n            console.log(`Delete of ${id} cancelled.`);\r\n    }\r\n};\r\n\r\nconst ListItem = ({ item, remove }) => {\r\n    return (\r\n        <div className=\"scenario-assignment-list-item\">\r\n            <p>{item.title}</p>\r\n\r\n            <Link to={`/class-codes/${item.title}`} className=\"action-bttn\" >Edit</Link>\r\n            <button type=\"button\" className=\"action-bttn\" onClick={() => remove(item)}>Delete</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClassCodesList;","import { INTV_META_DATA, CHECKLIST_META_DATA } from '@meddbriefer/scenario-data/traumaScenarioV2MetaData';\r\nconst assessmentIds = CHECKLIST_META_DATA\r\n                        .filter(item => item.type === 'assessment');\r\nconst idList = INTV_META_DATA\r\n                .filter(intv => intv.type === 'intervention')\r\n                .sort((one, two) => {\r\n                    if(one.label.localeCompare(two.label) < 0) return -1;\r\n                    if(one.label.localeCompare(two.label) > 0) return 1;\r\n                    return 0;\r\n                });\r\n\r\nexport const matchesLabel = (str) => {\r\n    if (!str || str === \"\") return null;\r\n    let matchArr = [];\r\n\r\n    for (let item of idList) \r\n        if (item.label?.toLowerCase().includes(str?.toLowerCase()))\r\n            matchArr.push(item);\r\n\r\n    return matchArr.length > 0 ? matchArr : null;\r\n}\r\n\r\nexport const matchesId = (str) => {\r\n    if (!str || str === \"\") return null;\r\n    let matchArr = [];\r\n\r\n    for (let item of idList) \r\n        if (item.id?.toLowerCase().includes(str?.toLowerCase()))\r\n            matchArr.push(item);\r\n\r\n    return matchArr.length > 0 ? matchArr : null;\r\n}\r\n\r\nexport const matchesAny = (str) => {\r\n    if (!str || str === \"\") return null;\r\n    let matchArr = [];\r\n\r\n    for (let item of idList) \r\n        if (item.label?.toLowerCase().includes(str?.toLowerCase()) || item.id?.toLowerCase().includes(str?.toLowerCase()))\r\n            matchArr.push(item);\r\n\r\n    return matchArr.length > 0 ? matchArr : null;\r\n}\r\n\r\nexport const matchesChecklist = (str) => {\r\n    if (!str || str === \"\") return null;\r\n    let matchArr = [];\r\n\r\n    for (let item of assessmentIds) \r\n        if (item.id?.toLowerCase().includes(str?.toLowerCase()))\r\n            matchArr.push(item);\r\n\r\n    return matchArr.length > 0 ? matchArr : null;\r\n}","const SearchResults = ({ list, setVal }) => {\r\n    const noSelect = { id: \"(No selection)\", label: \"(No selection)\" };\r\n\r\n    return (\r\n      <>\r\n        {list && (\r\n          <div className={`search-results`}  >\r\n            {list &&\r\n              [noSelect, ...list].map((e, i) => (\r\n                <p\r\n                  key={i}\r\n                  id={e.id}\r\n                  onClick={(e) => setVal(e)}\r\n                  onMouseOver={v => v.target.innerText = e.id}\r\n                  onMouseLeave={v => v.target.innerText = e.label}\r\n                >\r\n                  {e.label}\r\n                </p>\r\n              ))}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default SearchResults;","import { useState, useRef } from 'react';\r\nimport { matchesLabel, matchesChecklist } from '../../scripts/id-util.js';\r\nimport SearchResults from './SearchResults.js';\r\n\r\nconst FormItem = (props) => {\r\n    const [query, setQuery] = useState(\"\");\r\n    const textRef = useRef(\"\");\r\n\r\n\tconst deleteSelf = (e) => {\r\n\t\t// Handle wrapper of 'contraindicated' and 'minimal'\r\n\t\tlet item = props.type === 'contraindicated' || props.type === 'minimal'\r\n\t\t\t? e.target.parentNode.parentNode\r\n\t\t \t: e.target.parentNode;\r\n\t\titem.remove();\r\n\t}\r\n\r\n    const setVal = (e) => {\r\n        textRef.current.value = e.target.id;\r\n        setQuery(\"\");\r\n    }\r\n\r\n\tconst getPos = (num) => {\r\n\t\tif (!props.item.meta) return [\"\", 0];\r\n\t\tlet str = props.item.meta.contraReqOrder[num];\r\n\t\tlet pos = props.item.contraindicated.indexOf(str);\r\n\t\tif (pos < 0)\r\n\t\t\tpos = props.item.required.indexOf(str);\r\n\t\treturn [str, pos];\r\n\t}\r\n\r\n\tconst getChecked = (type) => {\r\n\t\tconst [str, num] = getPos(props.num);\r\n\t\treturn props.item[type][num] === str;\r\n\t}\r\n\r\n    switch (props.type) {\r\n\t\tcase 'findings':\r\n\t\t\treturn (\r\n\t\t\t\t<label className=\"mdb-block-item\">\r\n\t\t\t\t\tID:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid={`${props.block}-${props.type}-${props.num}`}\r\n\t\t\t\t\tclassName=\"mdb-text\"\r\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\tref={textRef}\r\n\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\tdefaultValue={props.item[props.type][props.num]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<SearchResults list={matchesChecklist(query)} setVal={setVal} />\r\n\t\t\t\t<button type=\"button\" onClick={e => deleteSelf(e)} >-</button>\r\n\t\t\t\t</label>\r\n            );\r\n\r\n\t\tcase 'minimal':\r\n\t\t\treturn (\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<label className=\"mdb-block-item\">\r\n\t\t\t\t\t\tID:\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`${props.block}-${props.type}-${props.num}`}\r\n\t\t\t\t\t\tclassName=\"mdb-text\"\r\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\t\tref={textRef}\r\n\t\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\t\tdefaultValue={props.item[props.type][props.num]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<SearchResults list={matchesLabel(query)} setVal={setVal} />\r\n\t\t\t\t\t<button type=\"button\" onClick={e => deleteSelf(e)} >-</button>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"mdb-reasoning no-margin\"\r\n\t\t\t\t\t\tid={`${props.block}-${props.type}Why-${props.num}`}\r\n\t\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\t\tdefaultValue={props.item[`${props.type}Why`][props.num]}\r\n\t\t\t\t\t\tplaceholder=\"Reasoning\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n            );\r\n\r\n\t    case 'notes':\r\n            return (\r\n\t\t\t\t<label className=\"mdb-block-item\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"mdb-text no-left-margin\"\r\n\t\t\t\t\tid={`${props.block}-${props.type}-${props.num}`}\r\n\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\tdefaultValue={props.item[props.type]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button type=\"button\" onClick={e => deleteSelf(e)} >-</button>\r\n\t\t\t\t</label>\r\n            );\r\n\r\n        case 'contraindicated':\r\n            return (\r\n\t\t\t\t<div className=\"mdb-red-item\">\r\n\t\t\t\t\t<label className=\"mdb-block-item\">\r\n\t\t\t\t\tID:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid={`${props.block}-contraindications-${props.num}`}\r\n\t\t\t\t\t\tclassName=\"mdb-text\"\r\n\t\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\t\tref={textRef}\r\n\t\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\t\tdefaultValue={props.item.meta.contraReqOrder[props.num]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<SearchResults list={matchesLabel(query)} setVal={setVal} />\r\n\t\t\t\t\t<button type=\"button\" onClick={e => deleteSelf(e)} >-</button>\t\t\t\t\t\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<div className=\"mdb-red-type\">\r\n\t\t\t\t\t\t<label className=\"red-type\">\r\n\t\t\t\t\t\t\tRequired\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tid={`${props.block}-required-${props.num}`}\r\n\t\t\t\t\t\t\tname={`${props.block}-red-type-${props.num}`}\r\n\t\t\t\t\t\t\tvalue=\"required\"\r\n\t\t\t\t\t\t\tdefaultChecked={getChecked('required')}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label name=\"red-type\" className=\"red-type\">\r\n\t\t\t\t\t\t\tContraindicated\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\tid={`${props.block}-contraindicated-${props.num}`}\r\n\t\t\t\t\t\t\tname={`${props.block}-red-type-${props.num}`}\r\n\t\t\t\t\t\t\tvalue=\"contraindicated\"\r\n\t\t\t\t\t\t\tdefaultChecked={getChecked('contraindicated')}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"mdb-reasoning  no-margin\"\r\n\t\t\t\t\t\tid={`${props.block}-${props.type}Why-${props.num}`}\r\n\t\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\t\tdefaultValue={props.item[`${props.type}Why`][props.num]}\r\n\t\t\t\t\t\tplaceholder=\"Reasoning\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n            );\r\n\r\n        default:\r\n            return (\r\n\t\t\t\t<label className=\"mdb-block-item\">\r\n\t\t\t\t\tID:\r\n\t\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tid={`${props.block}-${props.type}-${props.num}`}\r\n\t\t\t\t\tclassName=\"mdb-text\"\r\n\t\t\t\t\tonChange={(e) => setQuery(e.target.value)}\r\n\t\t\t\t\tref={textRef}\r\n\t\t\t\t\tautoComplete={\"off\"}\r\n\t\t\t\t\tdefaultValue={props.item[props.type][props.num]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<SearchResults list={matchesLabel(query)} setVal={setVal} />\r\n\t\t\t\t<button type=\"button\" onClick={e => deleteSelf(e)} >-</button>\r\n\t\t\t\t</label>\r\n            );\r\n    }\r\n}\r\n\r\nexport default FormItem;","import FormItem from './FormItem';\r\nimport { useState, useRef, useEffect, useContext } from 'react';\r\nimport { matchesChecklist } from '../../scripts/id-util.js';\r\nimport SearchResults from './SearchResults.js';\r\nimport { MDBFormContext } from './MDBForm.js';\r\n\r\nconst FormBlock = (props) => {\r\n    const form = useContext(MDBFormContext);\r\n    const info = form.criticalActions[props.block];\r\n    const [ numGreen, setNumGreen ] = useState(0);\r\n    const [ numYellow, setNumYellow ] = useState(0);\r\n    const [ numRed, setNumRed ] = useState(0);\r\n    const [ numFindings, setNumFindings ] = useState(0);\r\n    const [ numNotes, setNumNotes ] = useState(0);\r\n\r\n    const newGreen = () => setNumGreen(numGreen + 1);\r\n    const newYellow = () => setNumYellow(numYellow + 1);\r\n    const newRed = () => setNumRed(numRed + 1);\r\n    const newFindings = () => setNumFindings(numFindings + 1);\r\n    const newNotes = () => setNumNotes(numNotes + 1);\r\n\r\n    const lessGreen = () => numGreen > 0 && setNumGreen(numGreen - 1);\r\n    const lessYellow = () => numYellow > 0 && setNumYellow(numYellow - 1);\r\n    const lessRed = () => numRed > 0 && setNumRed(numRed - 1);\r\n    const lessFindings = () => numFindings > 0 && setNumFindings(numFindings - 1);\r\n    const lessNotes = () => numNotes > 0 && setNumNotes(numNotes - 1);\r\n\r\n    const deleteSelf = (e) => {\r\n        let block = e.target.parentNode;\r\n        block.remove();\r\n    }\r\n\r\n    const [query, setQuery] = useState([\"\", \"\"]);\r\n    const [beforeRef, afterRef, duringRef] = [useRef(), useRef(), useRef()];\r\n    const setInput = (e) => {\r\n        switch (query[0]) \r\n        {\r\n            case \"before\":\r\n                beforeRef.current.value = e.target.id; break;\r\n            case \"after\": \r\n                afterRef.current.value = e.target.id; break;\r\n            case \"during\":\r\n                duringRef.current.value = e.target.id; break;\r\n            default:\r\n                throw Error(\"Broken Query\")\r\n        }\r\n        setQuery([\"\", \"\"]);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if (form) {\r\n            let info = form.criticalActions[props.block];\r\n            setNumGreen(info.standard.length)\r\n            setNumYellow(info.minimal.length)\r\n            setNumRed(info.contraindicated.length + info.required.length)\r\n            setNumFindings(info.findings.length)\r\n            setNumNotes(info.notes.length)\r\n        }\r\n    }, [form, props.block])\r\n    \r\n    return (\r\n        <div className=\"mdb-block-wrapper\">\r\n            <button type=\"button\" className=\"delete-self-block\" onClick={e => deleteSelf(e)} >-</button>\r\n            <div id=\"mdb-info\" className=\"mdb-block\" >\r\n                <p className=\"mdb-block-heading\" >Info:</p>\r\n                <div className=\"mdb-info-wrapper\">\r\n                    <label>\r\n                        Critical action:\r\n                        <input type=\"text\" \r\n                            className=\"mdb-text\" \r\n                            id={`${props.block}-label`} \r\n                            autoComplete={\"off\"} \r\n                            defaultValue={info.label} \r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Protocol:\r\n                        <input type=\"text\" \r\n                            className=\"mdb-text\" \r\n                            id={`${props.block}-protocol`} \r\n                            autoComplete={\"off\"} \r\n                            defaultValue={info.protocol} \r\n                        />\r\n                    </label>                        \r\n                    <label>\r\n                        Before:\r\n                        <input type=\"text\" \r\n                            className=\"mdb-text\" \r\n                            id={`${props.block}-when-before`} \r\n                            ref={beforeRef}\r\n                            onChange={(e) => setQuery([\"before\", e.target.value])}\r\n                            autoComplete={\"off\"} \r\n                            defaultValue={info.when.before} \r\n                        />\r\n                    {query[0] === \"before\" && <SearchResults list={matchesChecklist(query[1])} setVal={setInput} />}\r\n                    </label>\r\n                    <label>\r\n                        After:\r\n                        <input type=\"text\" \r\n                            className=\"mdb-text\" \r\n                            id={`${props.block}-when-after`} \r\n                            ref={afterRef}\r\n                            onChange={(e) => setQuery([\"after\", e.target.value])}\r\n                            autoComplete={\"off\"} \r\n                            defaultValue={info.when.after} \r\n                        />\r\n                    {query[0] === \"after\" && <SearchResults list={matchesChecklist(query[1])} setVal={setInput} />}\r\n                    </label>\r\n                    <label>\r\n                        During:\r\n                        <input type=\"text\" \r\n                            className=\"mdb-text\" \r\n                            id={`${props.block}-when-during`} \r\n                            ref={duringRef}\r\n                            onChange={(e) => setQuery([\"during\", e.target.value])}\r\n                            autoComplete={\"off\"} \r\n                            defaultValue={info.when.during} \r\n                        />\r\n                    {query[0] === \"during\" && <SearchResults list={matchesChecklist(query[1])} setVal={setInput} />}\r\n                    </label>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"mdb-green\" className=\"mdb-block\" >\r\n                <p className=\"mdb-block-heading\" >Standard:</p>\r\n                { [...Array(numGreen)].map( (e, i) => (\r\n                    <FormItem block={props.block} num={i} key={i} type='standard' item={info} edit={lessGreen} />\r\n                )) }\r\n\r\n                <div>\r\n                    <button type=\"button\" onClick={newGreen} >Add new</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"mdb-yellow\" className=\"mdb-block\" >\r\n                <p className=\"mdb-block-heading\" >Minimal:</p>\r\n                { [...Array(numYellow)].map( (e, i) => (\r\n                    <FormItem block={props.block} num={i} key={i} type='minimal' item={info} edit={lessYellow} />\r\n                )) }\r\n\r\n                <div>\r\n                    <button type=\"button\" onClick={newYellow} >Add new</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"mdb-red\" className=\"mdb-block\" >\r\n                <p className=\"mdb-block-heading\" >Contraindications:</p>\r\n                { [...Array(numRed)].map( (e, i) => (\r\n                    <FormItem block={props.block} num={i} key={i} type='contraindicated' item={info} edit={lessRed} />\r\n                )) }\r\n\r\n                <div>\r\n                    <button type=\"button\" onClick={newRed} >Add new</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"mdb-findings\" className=\"mdb-block\" >\r\n                <p className=\"mdb-block-heading\" >Findings:</p>\r\n                { [...Array(numFindings)].map( (e, i) => (\r\n                    <FormItem block={props.block} num={i} key={i} type='findings' item={info} edit={lessFindings} />\r\n                )) }\r\n\r\n                <div>\r\n                    <button type=\"button\" onClick={newFindings} >Add new</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"mdb-notes\" className=\"mdb-block\" >\r\n                <p className=\"mdb-block-heading\" >Notes / Comments:</p>\r\n                { [...Array(numNotes)].map( (e, i) => (\r\n                    <FormItem block={props.block} num={i} key={i} type='notes' item={info} edit={lessNotes} />\r\n                )) }\r\n\r\n                <div>\r\n                    <button type=\"button\" onClick={newNotes} >Add new</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FormBlock;","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport FormBlock from './FormBlock';\r\nimport { verifyDocument, publishDocument, getDocument } from '../../scripts/connect-firebase.js';\r\nimport criticalActions from '../../data/blank-crit-actions.json';\r\n\r\nconst COLLECTION_ID = 'scenario-required-actions';\r\n\r\nexport const MDBFormContext = React.createContext();\r\n\r\nconst FormRoot = (props) => {\r\n    const [mdbForm, setMDBForm] = useState(null);\r\n    const [numBlocks, setNumBlocks] = useState(1);\r\n    const { mdbFormId } = props.match.params;\r\n    const formRef = useRef(null);\r\n    const isEdit = () => !!mdbFormId;\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        mdbFormId ?\r\n        getDocument(COLLECTION_ID, mdbFormId)\r\n            .then(res => {\r\n                setMDBForm(res)\r\n                setNumBlocks(res.criticalActions.length)\r\n            })\r\n            .catch(err => console.error(err))\r\n        : setMDBForm({\r\n            scenarioName: \"\",\r\n            criticalActions: [\r\n                criticalActions\r\n            ]\r\n        });\r\n    }, [mdbFormId])\r\n\r\n    const addBlock = () => {\r\n        mdbForm.criticalActions.push(criticalActions);\r\n        setNumBlocks(numBlocks + 1);\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <MDBFormContext.Provider value={mdbForm} >\r\n            <div className=\"mdb-form-wrapper\" >\r\n                {\r\n                mdbForm ? \r\n                <>\r\n                <form id=\"debriefer-form\" className=\"debriefer-form\" ref={formRef} >\r\n                    <label className=\"mdb-block-heading\">\r\n                        Scenario Name:\r\n                        <input type=\"text\" className=\"mdb-text\" id=\"scenarioName\" autoComplete={\"off\"} defaultValue={mdbForm.scenarioName} />\r\n                    </label>\r\n\r\n                    { [...Array(numBlocks)].map( (e, i) => (\r\n                        <FormBlock key={i} block={i} form={mdbForm} />\r\n                    )) }\r\n\r\n                    <div>\r\n                        <button type=\"button\" onClick={addBlock} >Add new</button>\r\n                    </div>\r\n                </form>\r\n                <button type=\"button\" id=\"submit-bttn\" onClick={process}>Continue</button>\r\n                </>\r\n                : <p>Loading...</p>\r\n                }\r\n            </div>\r\n        </MDBFormContext.Provider>\r\n        </>\r\n    );\r\n\r\n    async function process() {\r\n        let form = scan(formRef.current, []);\r\n        let object = { scenarioName: null, criticalActions: [], associations: mdbForm.associations ?? {} };\r\n        let blocks = {};\r\n\r\n        for (let i=0; i < form.length; i++) {\r\n            let item = form[i];\r\n            let path = item.id.split('-');\r\n            // path[0] = block, path[1] = type, path[2] = number\r\n\r\n            // Create block if it doesn't exist yet\r\n            if (!blocks[ path[0] ] && path[0] !== \"scenarioName\") blocks[ path[0] ] = deepCopy(criticalActions);\r\n            \r\n            switch (path.length) \r\n            {\r\n                default: console.error('Path error.'); break;\r\n\r\n                case 1: // Label\r\n                    object[ path[0] ] = item.value; break;\r\n\r\n                case 2: // Info\r\n                    blocks[ path[0] ][ path[1] ] = item.value; break;\r\n\r\n                case 3: // Actions\r\n                    if (path[1] === 'contraindications')\r\n                    {\r\n                        let type = form[i + 1].checked ? 'required' : 'contraindicated';\r\n                        blocks[ path[0] ][ type ].push(item.value);\r\n                        blocks[ path[0] ].meta.contraReqOrder.push(item.value);\r\n                        i += 2;\r\n                    }\r\n                    else\r\n                    {\r\n                        Array.isArray(blocks[ path[0] ][ path[1] ])\r\n                            ? blocks[ path[0] ][ path[1] ].push(item.value) \r\n                            : blocks[ path[0] ][ path[1] ] = item.value; \r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Add to object if it exists or if only 1 block\r\n        for (let block in blocks) {\r\n            if (blocks[block].label || !blocks[1])\r\n                object.criticalActions.push(blocks[block]);\r\n        }\r\n\r\n        //Validate & upload object\r\n        if (object.scenarioName.trim() === \"\" || \r\n            (!isEdit && \r\n            await verifyDocument(COLLECTION_ID, object.scenarioName.trim())\r\n        )) {\r\n            alert(\"You need a new name for the scenario!\");\r\n            return;\r\n        } else {\r\n            publishDocument(COLLECTION_ID, object.scenarioName, object);\r\n            alert(`Debriefer info for ${object.scenarioName} uploaded.`);\r\n            history.push(`/associations/${object.scenarioName}`);\r\n        }\r\n    }\r\n\r\n    function scan(obj, arr) {\r\n        for (let node of obj) \r\n            if (node.nodeName === 'INPUT' || node.nodeName === 'TEXTAREA')\r\n                arr.push(node);\r\n\r\n        return arr;\r\n    }\r\n\r\n    function deepCopy(obj) { return JSON.parse(JSON.stringify(obj)); }\r\n}\r\n\r\nexport default FormRoot;","import { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCollection } from '../../scripts/connect-firebase.js';\r\nimport Header from '../Header.js';\r\n\r\nconst COLLECTION_ID = 'scenario-required-actions';\r\nconst MDBFormList = () => {\r\n    const [formsList, setFormsList] = useState(null);\r\n\r\n    useEffect(() => {\r\n        getCollection(COLLECTION_ID)\r\n            .then(res => setFormsList(res))\r\n            .catch(err => console.error(err));\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div id=\"mdb-form-list-wrapper\">\r\n            <h1>MDB Debriefer Forms</h1>\r\n            <Link to={`/debriefer-entry/`} className=\"mdb-form-list-item\" id=\"new-mdb-form\" >Create new</Link>\r\n            {\r\n                formsList ?\r\n                formsList.map((ele, i) => (\r\n                    <MDBFormListItem item={ele} key={i} />\r\n                ))\r\n                : <p>Loading...</p>\r\n            }\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nconst MDBFormListItem = ({item}) => {\r\n    return (\r\n        <div className=\"mdb-form-list-item\">\r\n            <>\r\n            <h3>{item.scenarioName}</h3>\r\n            <Link to={`/debriefer-entry/${item.scenarioName}`} className=\"action-bttn\" >Edit</Link> \r\n            </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MDBFormList;","import { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { getDocument, publishDocument } from '../../scripts/connect-firebase.js';\r\nimport { INTV_META_DATA } from '@meddbriefer/scenario-data/traumaScenarioV2MetaData';\r\nimport Header from '../Header';\r\n\r\nconst COLLECTION_ID = 'scenario-required-actions';\r\n\r\nconst ActionAssociations = (props) => {\r\n    const { formId } = props.match.params;\r\n    const [mdbForm, setMDBForm] = useState(null);\r\n    const [prompts, setPrompts] = useState();\r\n    const associationsRef = useRef();\r\n    let history = useHistory();\r\n\r\n    // Load in form data\r\n    useEffect(() => {\r\n        if (formId) {\r\n            // Ensure the data has been uploaded to Firebase\r\n            setTimeout(() => {\r\n                getDocument(COLLECTION_ID, formId)\r\n                    .then(res => setMDBForm(res))\r\n                    .catch(err => console.error(err))\r\n            }, 1000);            \r\n        } else throw Error ('Unable to fetch debriefer info');\r\n    }, [formId]);\r\n\r\n    // Set list of prompts\r\n    useEffect(() => {\r\n        mdbForm &&\r\n        setPrompts( getMatchingPrompts(mdbForm.criticalActions) );\r\n    }, [mdbForm]);\r\n\r\n    const handleSubmit = () => {\r\n        let obj = {};\r\n        for (let item of associationsRef.current)\r\n        {\r\n            if (item.tagName === 'SELECT')\r\n            {\r\n                obj[item.name] = item.value;\r\n            }\r\n            else\r\n            {\r\n                if (!obj[item.name]) obj[item.name] = [];\r\n                if (item.checked)\r\n                    obj[item.name].push(item.value);\r\n            }\r\n        }\r\n        \r\n        mdbForm.associations = obj;\r\n        \r\n        publishDocument(COLLECTION_ID, mdbForm.scenarioName, mdbForm);\r\n        history.push('/debriefer-entry-list/');\r\n        alert('Prompt assocations uploaded.');\r\n    }\r\n\r\n    const getSelected = (parent) => {\r\n        return mdbForm.associations \r\n            ? mdbForm.associations[parent]\r\n            : null;\r\n    }\r\n    const isChecked = (parent, item) => {\r\n        return mdbForm.associations \r\n            ? mdbForm.associations[parent]?.includes(item) \r\n            : false;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <Header />\r\n        <div id=\"associations-wrapper\">\r\n            <h1 id=\"title\">Debriefer Prompt Associations</h1>\r\n            <p className=\"hint-text\">To be used to associate the correct action(s) with their interventions.</p>\r\n            {\r\n                mdbForm\r\n                ? <form id=\"associations-list\" ref={associationsRef} >\r\n                    {prompts && prompts.map(intv => (\r\n                        intv.prompts.map(prompt => (\r\n                            prompt.selectionType === \"one\" \r\n                            ? // OR\r\n                            <label key={prompt.id} className=\"associations-or\">\r\n                                {prompt.label}\r\n                                {\r\n                                <select name={prompt.id} defaultValue={getSelected(prompt.id)}>\r\n                                    {\r\n                                    prompt.children.map(child => (\r\n                                        <option key={child.id} value={child.id}>{child.label}</option>\r\n                                    ))\r\n                                    }\r\n                                </select>\r\n                                }\r\n                            </label>\r\n                            : // AND\r\n                            <div key={prompt.id} className=\"associations-and\">\r\n                                {prompt.label}\r\n                                {\r\n                                prompt.children.map(child => (\r\n                                    <label key={child.id}>\r\n                                        {child.label}\r\n                                        <input type=\"checkbox\" value={child.id} name={prompt.id} defaultChecked={isChecked(prompt.id, child.id)}/>\r\n                                    </label>\r\n                                ))\r\n                                }\r\n                            </div>\r\n                            ))\r\n                    ))}\r\n                </form>\r\n                : <p>Loading...</p>\r\n            }\r\n            {\r\n                prompts && prompts.length === 0 &&\r\n                <p>There is nothing to associate.</p>\r\n            }\r\n            <button type=\"button\" onClick={handleSubmit} id=\"associations-submit\">Submit</button>\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nconst getAllInterventions = () => {\r\n    let obj = {};\r\n\r\n    for(let item of INTV_META_DATA)\r\n    {\r\n        if (item.type === 'intervention-form')\r\n        {\r\n            item.prompts = [];\r\n            obj[item.id] = item;\r\n        }\r\n        else if (item.type === 'prompt')\r\n        {\r\n            if (item.form) {\r\n                obj[ item.form ].prompts.push(item);\r\n            }\r\n        }\r\n        else if (item.type === 'answer' || item.type === 'intervention')\r\n        {\r\n            if (item.prompt) {\r\n                for (let intv in obj) {\r\n                    for (let prompt of obj[intv].prompts) {\r\n                        if (prompt.id === item.prompt) {\r\n                            if (!prompt.children) prompt.children = [];\r\n                            !prompt.children.includes(item) && prompt.children.push(item);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return obj;\r\n}\r\n\r\nconst getMatchingPrompts = (list) => {\r\n    if (!list) return [];\r\n\r\n    const allInterventions = getAllInterventions();\r\n    let flattenedIds = [];\r\n    let matchingPrompts = [];\r\n    \r\n    // Flatten Ids\r\n    for(const block in list) {\r\n        for (const item in list[block]){\r\n            let curr = list[block][item];\r\n            if (Array.isArray(curr) && item !== 'contraindicated') {\r\n                flattenedIds.push(...curr);\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Get matching intervention prompts\r\n    for (let id of flattenedIds) {\r\n        for (let item of INTV_META_DATA) {\r\n            if (id === item.id && item.relatedForm) {\r\n                matchingPrompts.push(allInterventions[item.relatedForm]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return matchingPrompts;\r\n}\r\n\r\nexport default ActionAssociations;","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { AuthProvider, StaffRoute } from \"@meddbriefer/mdb-auth\";\r\n\r\nimport \"./styles/form-styles.scss\";\r\nimport \"./styles/home-styles.scss\";\r\nimport \"./styles/assignment-styles.scss\";\r\nimport \"./styles/debriefer-styles.scss\";\r\n\r\nimport UnauthedLayout from \"./components/UnauthedLayout\"\r\n\r\nimport HomePage from \"./components/HomePage\";\r\nimport ScenarioForm from \"./components//ScenarioEditor/ScenarioForm\";\r\nimport ScenariosList from \"./components/ScenarioEditor/ScenariosList\";\r\nimport ClassCode from './components/ClassCodes/ClassCode';\r\nimport ClassCodesList from './components/ClassCodes/ClassCodesList';\r\nimport MDBForm from './components/MDBForm/MDBForm';\r\nimport MDBFormList from './components/MDBForm/MDBFormList';\r\nimport ActionAssociations from './components/MDBForm/ActionAssociations';\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={HomePage} />\r\n          <StaffRoute exact path=\"/scenarios\" authFlowLayout={UnauthedLayout} component={ScenariosList} />\r\n          <StaffRoute exact path=\"/scenario/\" authFlowLayout={UnauthedLayout} component={ScenarioForm} />\r\n          <StaffRoute exact path=\"/scenario/:scenarioId\" authFlowLayout={UnauthedLayout} component={ScenarioForm} />\r\n          <StaffRoute exact path=\"/scenario/:scenarioId/:asTemplate\" authFlowLayout={UnauthedLayout} component={ScenarioForm} />\r\n          <StaffRoute exact path=\"/class-codes-list/\" authFlowLayout={UnauthedLayout} component={ClassCodesList} />\r\n          <StaffRoute exact path=\"/class-codes/\" authFlowLayout={UnauthedLayout} component={ClassCode} />\r\n          <StaffRoute exact path=\"/class-codes/:classCode\" authFlowLayout={UnauthedLayout} component={ClassCode} />\r\n          <StaffRoute exact path=\"/debriefer-entry-list/\" authFlowLayout={UnauthedLayout} component={MDBFormList} />\r\n          <StaffRoute exact path=\"/debriefer-entry/:mdbFormId\" authFlowLayout={UnauthedLayout} component={MDBForm} />\r\n          <StaffRoute exact path=\"/debriefer-entry/\" authFlowLayout={UnauthedLayout} component={MDBForm} />\r\n          <StaffRoute exact path=\"/associations/:formId\" authFlowLayout={UnauthedLayout} component={ActionAssociations} />\r\n        </Switch>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from './App.js';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}