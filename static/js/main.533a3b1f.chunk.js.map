{"version":3,"sources":["components/Header.js","components/UnauthedLayout.js","components/HomePage.js","../../../libs/mdb-firebase/index.js","scripts/connect-firebase.js","components/BasicInfo.js","components/ScenarioItem.js","components/Steplist.js","components/Vitals.js","components/Sample.js","components/ScenarioForm.js","components/ScenariosList.js","components/ScenarioAssignment.js","components/ScenarioAssignmentsList.js","App.js","index.js"],"names":["Header","useContext","AuthContext","currentUser","signOutUser","history","useHistory","location","useLocation","className","pathname","type","onClick","goBack","UnauthedLayout","props","children","HomePage","to","firebaseApp","firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","auth","firestore","verifyScenarioName","name","a","collection","doc","get","scenario","data","verifyAssignmentName","publishScenario","scenarioObject","set","alert","getScenarios","where","docs","map","item","getScenarioWithName","snapshot","permanentlyDeleteScenario","delete","console","log","publishScenarioAssignment","form","getScenarioAssignments","groups","getScenarioAssignmentWithName","group","deleteScenarioAssignment","BasicInfo","active","edit","info","pt","id","classnames","defaultValue","instructorInformation","dispatchInfo","sceneAssessment","placeholder","maxTime","patientInformation","moulage","position","actions","ScenarioHeader","label","Intervention","intervention","interventions","hidden","toUpperCase","value","Assessment","findings","assessmentFindings","ScenarioItem","Steplist","scenarioData","VitalsBox","header","Vital","prefix","suffix","path","Vitals","SAMPLE","S","A","M","P","L","E","ScenarioForm","scenarioId","match","params","useState","setScenario","activeTab","setActiveTab","isActiveTab","isEdit","formEl","useRef","useEffect","then","result","catch","error","blankTrauma","submitForm","ref","current","trim","window","confirm","processForm","input","formLength","Object","keys","newScenario","JSON","parse","stringify","i","split","slice","toString","ListItem","remove","index","scenarioType","ScenariosList","scenarios","setScenarios","LOADING","listIndex","deleteScenario","newList","splice","ScenarioAssignment","groupId","assignment","setAssignment","originalId","groupTitle","checklist","orderRequired","err","processAssignment","assignmentObj","checked","order","parseInt","handleSubmit","title","assignmentTasks","assignments","push","defaultChecked","ScenarioGroupsList","setGroups","handleDelete","newGroups","indexOf","App","exact","component","authFlowLayout","ScenarioGroup","ReactDOM","render","document","getElementById"],"mappings":"o+NAsBeA,EAlBA,WAAO,IAAD,EACkBC,qBAAWC,eAAxCC,EADW,EACXA,YAAaC,EADF,EACEA,YACjBC,EAAUC,cACVC,EAAWC,cAEf,OACE,sBAAKC,UAAU,YAAf,UACE,6CAEuB,MAAtBF,EAASG,UACV,wBAAQC,KAAK,SAASF,UAAU,YAAYG,QAAS,kBAAMP,EAAQQ,UAAnE,kBAECV,GACD,wBAAQQ,KAAK,SAASF,UAAU,gBAAgBG,QAAS,kBAAMR,KAA/D,0BCNSU,EATQ,SAACC,GACpB,OACI,qCACA,cAAC,EAAD,IACCA,EAAMC,aCiBAC,EAlBE,WAEf,OACE,qCACE,cAAC,EAAD,IAEA,sBAAKR,UAAU,cAAf,UACE,cAAC,OAAD,CAAMS,GAAG,aAAT,SACE,qBAAKT,UAAU,kBAAf,8BAEF,cAAC,OAAD,CAAMS,GAAG,mBAAT,SACE,qBAAKT,UAAU,kBAAf,2C,wDCDJU,G,YAAeC,IAASC,KAAKC,OAA+CF,IAASG,MAA/CH,IAASI,cAX1B,CACvBC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,kBAONC,GADOb,EAAYc,OACdd,EAAYe,aChBjBC,EAAkB,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACTL,EAAGM,WAAW,aAAaC,IAAIH,GAAMI,MAD5B,cAC1BC,EAD0B,yBAEJ,MAAnBA,EAASC,QAFc,2CAAH,sDAKlBC,EAAoB,uCAAG,WAAOP,GAAP,eAAAC,EAAA,sEACXL,EAAGM,WAAW,wBAAwBC,IAAIH,GAAMI,MADrC,cAC5BC,EAD4B,yBAEN,MAAnBA,EAASC,QAFgB,2CAAH,sDAKpBE,EAAe,uCAAG,WAAOR,EAAMS,GAAb,SAAAR,EAAA,sEACrBL,EAAGM,WAAW,aAAaC,IAAIH,GAAMU,IAAID,GADpB,OAE3BE,MAAM,0BAAD,OAA2BX,EAA3B,OAFsB,2CAAH,wDAKfY,EAAY,uCAAG,4BAAAX,EAAA,sEACDL,EAAGM,WAAW,aAChBW,MAAM,OAAQ,KAAM,gBAChBT,MAHD,cACpBF,EADoB,yBAIjBA,EAAWY,KAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKV,WAJhB,2CAAH,qDAOZW,EAAmB,uCAAG,WAAOjB,GAAP,eAAAC,EAAA,sEACVL,EAAGM,WAAW,aAAaC,IAAIH,GAAMI,MAD3B,cAC3Bc,EAD2B,yBAExBA,EAASZ,QAFe,2CAAH,sDAKnBa,EAAyB,uCAAG,WAAOnB,GAAP,SAAAC,EAAA,sEAC/BL,EAAGM,WAAW,aAAaC,IAAIH,GAAMoB,SADN,cAErCC,QAAQC,IAAR,WAAgBtB,EAAhB,2BAFqC,mBAG9B,GAH8B,2CAAH,sDAMzBuB,EAAyB,uCAAG,WAAOvB,EAAMwB,GAAb,SAAAvB,EAAA,sEAC/BL,EAAGM,WAAW,wBAAwBC,IAAIH,GAAMU,IAAIc,GADrB,OAErCH,QAAQC,IAAR,oBAAyBtB,EAAzB,8BAFqC,2CAAH,wDAKzByB,EAAsB,uCAAG,4BAAAxB,EAAA,sEACfL,EAAGM,WAAW,wBAAwBE,MADvB,cAC9BsB,EAD8B,yBAE3BA,EAAOZ,KAAKC,KAAI,SAAAC,GAAI,OAAIA,EAAKV,WAFF,2CAAH,qDAKtBqB,EAA6B,uCAAG,WAAO3B,GAAP,eAAAC,EAAA,sEACvBL,EAAGM,WAAW,wBAAwBC,IAAIH,GAAMI,MADzB,cACrCwB,EADqC,yBAElCA,EAAMtB,QAF4B,2CAAH,sDAK7BuB,EAAwB,uCAAG,WAAO7B,GAAP,SAAAC,EAAA,sEAC9BL,EAAGM,WAAW,wBAAwBC,IAAIH,GAAMoB,SADlB,OAEpCC,QAAQC,IAAR,WAAgBtB,EAAhB,iCAFoC,2CAAH,sD,QCJtB8B,EA5CG,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQ1B,EAAqB,EAArBA,SAAU2B,EAAW,EAAXA,KAChCC,EAAO5B,EAAS4B,KACfC,EAAK,qBACZ,OACC,sBAAKC,GAAG,aAAa9D,UAAW+D,IAAW,eAAgB,CAAC,wBAAyBL,IAArF,UACC,oDACA,oDAEC,uBAAOI,GAAG,OAAO5D,KAAK,OAAO8D,aAAcL,EAAO3B,EAASL,KAAO,QAGnE,qDAEC,0BAAUmC,GAAG,6BAA6BE,aAAcJ,EAAKK,2BAG9D,mDACe,0BAAUH,GAAG,oBAAoBE,aAAcJ,EAAKM,kBAGnE,sDACkB,0BAAUJ,GAAG,uBAAuBE,aAAcJ,EAAKO,qBAGzE,+DAC2B,uBAAOL,GAAG,eAAe5D,KAAK,SAASkE,YAAY,UAAUJ,aAAcJ,EAAKS,aAG3G,+CACA,sBAAKP,GAAG,UAAR,UACC,6CACS,uBAAO5D,KAAK,OAAO4D,GAAE,eAAUD,EAAV,YAAwBG,aAAcJ,EAAKU,mBAAmBC,aAE5F,8CACU,uBAAOrE,KAAK,OAAO4D,GAAE,eAAUD,EAAV,aAAyBG,aAAcJ,EAAKU,mBAAmBE,cAE9F,6CACS,uBAAOtE,KAAK,OAAO4D,GAAE,eAAUD,EAAV,YAAwBG,aAAcJ,EAAKU,mBAAmBG,oBCzB1FC,EAAiB,SAAC,GAAY,IAAX/B,EAAU,EAAVA,KACvB,OAAO,qBAAK3C,UAAU,wBAAf,SAAwC2C,EAAKgC,SAGhDC,EAAe,SAAC,GAAsB,IAAD,EAApBjC,EAAoB,EAApBA,KAChBkC,EADoC,EAAd7C,SACE8C,cAC7B,OACE,6CACOnC,EAAKgC,MADZ,MAEE,yBAAQb,GAAE,wBAAmBnB,EAAKmB,IAAlC,UACD,wBAAQiB,QAAM,EAAd,mBAAgBF,EAAalC,EAAKmB,WAAlC,aAAgB,EAAuBkB,gBACpC,wBAAQC,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,KAAd,uBAMFC,EAAa,SAAC,GAAsB,IAArBvC,EAAoB,EAApBA,KACdwC,EADkC,EAAdnD,SACAoD,mBACzB,OACE,6CACOzC,EAAKgC,MADZ,MAEE,uBACEzE,KAAK,OACL4D,GAAE,6BAAwBnB,EAAKmB,IAC/BM,YAAY,qCACZJ,aAAcmB,EAASxC,EAAKmB,UAMrBuB,EAhDM,SAAC,GAAsB,IAArB1C,EAAoB,EAApBA,KAAMX,EAAc,EAAdA,SAC3B,MACgB,YAAdW,EAAKzC,KAEL,cAAC,EAAD,CAAgByC,KAAMA,IAEtB,qBAAK3C,UAAU,YAAf,SACiB,eAAd2C,EAAKzC,KACA,cAAC,EAAD,CAAYyC,KAAMA,EAAMX,SAAUA,IAClC,cAAC,EAAD,CAAcW,KAAMA,EAAMX,SAAUA,O,QCMjCsD,EAXE,SAAC,GAA0B,IAAxB5B,EAAuB,EAAvBA,OAAQ1B,EAAe,EAAfA,SAC3B,OACC,sBAAK8B,GAAG,iBAAiB9D,UAAW+D,IAAW,CAAC,wBAAyBL,IAAzE,UACC,gDACC6B,EAAa7C,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAA4BA,KAAMA,EAAMX,SAAUA,GAA/BW,EAAKmB,WCGtB0B,EAAY,SAAC,GAAgC,IAA9BxD,EAA6B,EAA7BA,SAAUyD,EAAmB,EAAnBA,OAAQvF,EAAW,EAAXA,KAEtC,OACC,sBAAKF,UAAU,gBAAf,UACC,6CAASyF,EAAT,mBACA,sBAAKzF,UAAU,aAAf,UACC,cAAC0F,EAAD,CAAOf,MAAM,KAAKzE,KAAMA,EAAM8B,SAAUA,IACxC,cAAC0D,EAAD,CAAOf,MAAM,IAAIzE,KAAMA,EAAM8B,SAAUA,IACvC,cAAC0D,EAAD,CAAOf,MAAM,IAAIzE,KAAMA,EAAM8B,SAAUA,IACvC,cAAC0D,EAAD,CAAOf,MAAM,OAAOzE,KAAMA,EAAM8B,SAAUA,IAC1C,cAAC0D,EAAD,CAAOf,MAAM,OAAOzE,KAAMA,EAAM8B,SAAUA,IAC1C,cAAC0D,EAAD,CAAOf,MAAM,QAAQzE,KAAMA,EAAM8B,SAAUA,IAC3C,cAAC0D,EAAD,CAAOf,MAAM,MAAMzE,KAAMA,EAAM8B,SAAUA,IACzC,cAAC0D,EAAD,CAAOf,MAAM,UAAUzE,KAAMA,EAAM8B,SAAUA,IAC7C,cAAC0D,EAAD,CAAOf,MAAM,OAAOzE,KAAMA,EAAM8B,SAAUA,IAC1C,cAAC0D,EAAD,CAAOf,MAAM,OAAOzE,KAAMA,EAAM8B,SAAUA,WAM9C,SAAS0D,EAAT,GAA0C,IAAzB1D,EAAwB,EAAxBA,SAAU2C,EAAc,EAAdA,MAAOzE,EAAO,EAAPA,KAC7ByF,EAAmB,SAATzF,EAAmB,oBAAsB,qBACnD0F,EAAqB,sBAAXD,EAAkC,KAAOzF,EACnD2F,EAAOD,EAAM,UAAMD,EAAN,YAAgBhB,EAAhB,YAAyBiB,GAAzB,UAAuCD,EAAvC,YAAiDhB,GAElE,OACC,kCACEA,EADF,IAEC,uBACCb,GAAE,UAAK+B,GACP3F,KAAK,OACL8D,aAAc4B,EACb5D,EAAS2D,GAAQhB,GAAOiB,GACxB5D,EAAS2D,GAAQhB,QAMPmB,MAlDA,SAAC,GAA0B,IAAxBpC,EAAuB,EAAvBA,OAAQ1B,EAAe,EAAfA,SACzB,OACC,sBAAKhC,UAAW+D,IAAW,kBAAmB,CAAC,wBAAyBL,IAAxE,UACC,cAAC,EAAD,CAAWxD,KAAK,OAAOuF,OAAO,UAAUzD,SAAUA,IAClD,cAAC,EAAD,CAAW9B,KAAK,aAAauF,OAAO,oBAAoBzD,SAAUA,IAClE,cAAC,EAAD,CAAW9B,KAAK,YAAYuF,OAAO,mBAAmBzD,SAAUA,QCyBpD+D,EA9BA,YAA2B,IAAxBrC,EAAuB,EAAvBA,OACXqC,EADkC,EAAf/D,SACD+D,OACxB,OACC,sBAAK/F,UAAW+D,IAAW,WAAY,CAAC,wBAAyBL,IAAUI,GAAG,SAA9E,UACC,yCAEA,sBAAK9D,UAAU,SAAf,UACC,uCACG,uBAAOE,KAAK,OAAO4D,GAAG,WAAWE,aAAc+B,EAAOC,OAEzD,uCACG,uBAAO9F,KAAK,OAAO4D,GAAG,WAAWE,aAAc+B,EAAOE,OAEzD,uCACG,uBAAO/F,KAAK,OAAO4D,GAAG,WAAWE,aAAc+B,EAAOG,OAEzD,uCACG,uBAAOhG,KAAK,OAAO4D,GAAG,WAAWE,aAAc+B,EAAOI,OAEzD,uCACG,uBAAOjG,KAAK,OAAO4D,GAAG,WAAWE,aAAc+B,EAAOK,OAEzD,uCACG,uBAAOlG,KAAK,OAAO4D,GAAG,WAAWE,aAAc+B,EAAOM,cCqG9CC,EAzGM,SAAChG,GAAW,IACxBiG,EAAejG,EAAMkG,MAAMC,OAA3BF,WADuB,EAECG,qBAFD,mBAExB1E,EAFwB,KAEd2E,EAFc,OAGGD,mBAAS,cAHZ,mBAGxBE,EAHwB,KAGbC,EAHa,KAIzBC,EAAc,SAACnF,GAAD,OAAUA,IAASiF,GACjCG,IAAWR,EACXS,EAASC,iBAAO,MAClBrH,EAAUC,cAUd,OAPAqH,qBAAU,WACTH,EAASnE,EAAoB2D,GAC3BY,MAAK,SAACC,GAAaT,EAAYS,MAC/BC,OAAM,SAACC,GAAYtE,QAAQC,IAAIqE,MAC/BX,EAAYY,KACZ,CAAChB,EAAYQ,IAGf,sBAAK/G,UAAU,wBAAf,UACC,sBAAK8D,GAAG,eAAR,UACC,qBAAK9D,UAAW+D,IAAW,aAAc,CAAC,aAAc+C,EAAY,gBAClE3G,QAAS,kBAAM0G,EAAa,eAD9B,kBAGA,qBAAK7G,UAAW+D,IAAW,aAAc,CAAC,aAAc+C,EAAY,YAClE3G,QAAS,kBAAM0G,EAAa,WAD9B,oBAGA,qBAAK7G,UAAW+D,IAAW,aAAc,CAAC,aAAc+C,EAAY,YAClE3G,QAAS,kBAAM0G,EAAa,WAD9B,oBAGA,qBAAK7G,UAAW+D,IAAW,aAAc,CAAC,aAAc+C,EAAY,cAClE3G,QAAS,kBAAM0G,EAAa,aAD9B,sBAGA,wBAAQ3G,KAAK,SAAS4D,GAAG,cAAc3D,QAAS,kBAhCpB,0CAgC0BqH,IAAtD,8BAGD,sBAAM1D,GAAG,gBAAgB9D,UAAU,gBAAgByH,IAAKT,EAAxD,SAEChF,EACA,qCACC,cAAC,EAAD,CAAY0B,OAAQoD,EAAY,cAAgB9E,SAAUA,EAAU2B,KAAMoD,IAC1E,cAAC,EAAD,CAASrD,OAAQoD,EAAY,UAAa9E,SAAUA,IACpD,cAAC,EAAD,CAAS0B,OAAQoD,EAAY,UAAa9E,SAAUA,IACpD,cAAC,EAAD,CAAW0B,OAAQoD,EAAY,YAAa9E,SAAUA,OAErD,gDA5C0B,4CAkD/B,4BAAAJ,EAAA,yDACKuB,EAAO6D,EAAOU,QADnB,KAGyB,MAAnBvE,EAAKxB,KAAKsD,OAA4C,KAA3B9B,EAAKxB,KAAKsD,MAAM0C,OAHjD,qCAG0EjG,EAAmByB,EAAKxB,KAAKsD,OAHvG,kDAGkH8B,EAHlH,kDAMEzE,MAAM,8BANR,wBAQUsF,OAAOC,QAAQ,qEAEvB1E,EAAO2E,EAAY3E,GAClB4D,GAAU5D,EAAKxB,OAASK,EAASL,MAASmB,EAA0Bd,EAASL,MAE9EQ,EAAgBgB,EAAKxB,KAAMwB,GAC3BvD,EAAQQ,UAGR4C,QAAQC,IAAI,qBAjBd,6CAlD+B,sBAuE/B,SAAS6E,EAAY7F,GACpBe,QAAQC,IAAI,iBAQZ,IAPA,IAEI8E,EACJjE,EACA+B,EAJImC,EAAaC,OAAOC,KAAKjG,GAAMpB,OAKnCsH,EAAcC,KAAKC,MAAMD,KAAKE,UAAUtG,GAAY,KAE5CuG,EAAE,EAAGA,EAAIP,EAAYO,IAAM,CAAC,IAAD,EAClC,aAAItG,EAAKsG,UAAT,aAAI,EAAStD,MAUZ,OATA8C,EAAQ9F,EAAKsG,GAAGtD,MAIA,wBAFhBY,GADA/B,EAAK7B,EAAKsG,GAAGzE,IACH0E,MAAM,MAEP,GAA6B3C,EAAO,CAACA,EAAK,GAAI/B,EAAG0E,MAAM,uBAAuBC,MAAM,GAAGC,YAC3E,kBAAZ7C,EAAK,KAAwBA,EAAO,CAACA,EAAK,GAAI/B,EAAG0E,MAAM,kBAAkBC,MAAM,GAAGC,aAInF7C,EAAKhF,QACZ,KAAK,EAAGsH,EAAYtC,EAAK,IAAMkC,EAAO,MACtC,KAAK,EAAGI,EAAYtC,EAAK,IAAIA,EAAK,IAAMkC,EAAO,MAC/C,KAAK,EAAGI,EAAYtC,EAAK,IAAIA,EAAK,IAAIA,EAAK,IAAMkC,EAAO,MAExD,QAAS/E,QAAQC,IAAI,qBAAsB4C,EAAKhF,SAKnD,OAAOsH,ICvEHQ,EAAW,SAAC,GAA6B,IAAD,EAA1BhG,EAA0B,EAA1BA,KAAMiG,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACjC,OACC,sBAAK7I,UAAU,qBAAf,UACC,oBAAI8D,GAAG,QAAP,SAAgBnB,EAAKhB,OACrB,4BAAIgB,EAAKmG,eACT,iDAAUnG,EAAKiB,KAAKK,6BAApB,QAA6C,gBAE7C,cAAC,OAAD,CAAMxD,GAAE,oBAAekC,EAAKhB,MAAQ3B,UAAU,cAA9C,kBACA,wBAAQE,KAAK,SAASF,UAAU,cAAcG,QAAS,kBAAMyI,EAAOC,IAApE,wBAKYE,EA3DO,WAAO,IAAD,EACOrC,qBADP,mBACpBsC,EADoB,KACTC,EADS,KAErBC,EAAU,2CACZC,EAAY,EAQhB,OANAjC,qBAAU,WACT3E,IACE4E,MAAK,SAACC,GAAa6B,EAAa7B,MAChCC,OAAM,SAACC,GAAYtE,QAAQC,IAAIqE,QAC/B,IAGF,qCACC,cAAC,EAAD,IAEA,sBAAKtH,UAAU,gBAAf,UACC,oBAAI8D,GAAG,sBAAP,2BAEA,cAAC,OAAD,CAAMrD,GAAG,aAAaT,UAAU,uCAAhC,SACC,gCACC,mCACA,2DAIDgJ,EACEA,EAAUtG,KAAI,SAACC,GAAD,OACdA,GAAQ,cAAC,EAAD,CAAUA,KAAMA,EAAgCiG,OAAQQ,EAAgBP,MAAOM,KAA/E,UAA8BxG,EAAKhB,KAAnC,aACPuH,QA5BoB,SAiCZE,EAjCY,8EAiC3B,WAA8BP,GAA9B,iBAAAjH,EAAA,yDACKkC,EAAKkF,EAAUH,GAAOlH,MACtBiG,OAAOC,QAAQ,yEAFpB,gCAGQ/E,EAA0BgB,GAHlC,QAIMuF,EAAUL,EAAUP,SAChBa,OAAOT,EAAO,GACtBI,EAAcI,GANhB,uBAQErG,QAAQC,IAAI,YAAaa,EAAI,aAR/B,6CAjC2B,wBC8GbyF,EAzGY,SAACjJ,GAAW,IAC3BkJ,EAAYlJ,EAAMkG,MAAMC,OAAxB+C,QAD0B,EAEE9C,mBAAS,MAFX,mBAE1BsC,EAF0B,KAEfC,EAFe,OAGIvC,mBAAS,MAHb,mBAG1B+C,EAH0B,KAGdC,EAHc,KAI1BC,EAAyBH,EAAbzC,IAAwByC,EACtCI,EAAa3C,iBAAO,MACpB4C,EAAY5C,iBAAO,MACnB6C,EAAgB7C,iBAAO,MAC5BrH,EAAUC,cAEXqH,qBAAU,WACN3E,IACK4E,MAAK,SAACC,GACH6B,EAAa7B,GAEboC,EACAlG,EAA8BkG,GACzBrC,MAAK,SAACC,GACHsC,EAActC,MAEjBC,OAAM,SAAC0C,GAAD,OAAS/G,QAAQC,IAAI8G,MAC9BL,EAAc,OAGnBrC,OAAM,kBAAMrE,QAAQC,IAAI,8BAC9B,CAACuG,IAEJ,IAAMQ,EAAoB,WAKtB,IAJA,IAAI7G,EAAO0G,EAAUnC,QAAQnH,SACzB0J,EAAgB,GAGZ1B,EAAE,EAAGA,EAAIpF,EAAKtC,OAAQ0H,IACvBpF,EAAKoF,GAAGhI,SAAS,GAAG2J,UACnBD,EAAc9G,EAAKoF,GAAGhI,SAAS,GAAG0E,OAAS,CACvCnB,GAAIX,EAAKoF,GAAGhI,SAAS,GAAG0E,MACxBkF,MAAOC,SAASjH,EAAKoF,GAAGhI,SAAS,GAAGA,SAAS,GAAG0E,QAAU,OAMtE,OAFAjC,QAAQC,IAAIgH,GAELA,GAGLI,EAAY,uCAAG,8BAAAzI,EAAA,yDACb0I,EAAQV,EAAWlC,QAAQzC,MAE3BsF,EAAkBP,IAEtBhH,QAAQC,IAAIsH,GALK,KAOK,KAAjBD,EAAM3C,OAPM,sCAOkBzF,EAAqBoI,GAPvC,mDAOkDvD,EAPlD,2DAQbzE,MAAM,wBARO,kCAYhByE,GAAU4C,IAAeW,GAAU9G,EAAyBmG,GAZ5C,UAcXzG,EAA2BoH,EAC7B,CAAEA,MAAOA,EAAOR,cAAeA,EAAcpC,QAAQwC,QAASM,YAAaD,IAf9D,QAiBjBjI,MAAM,aAAD,OAAcsH,EAAWlC,QAAQzC,QACtCrF,EAAQ6K,KAAK,oBAlBI,4CAAH,qDAqBlB,OACI,qCACA,cAAC,EAAD,IACA,sBAAKzK,UAAU,sBAAf,UACI,4DAEIyJ,EACA,qCACA,wBAAOzJ,UAAU,mBAAjB,+BACsB,uBAAOE,KAAK,OAAOuH,IAAKmC,EAAY5F,aAAcwF,OAGxE,qBAAKxJ,UAAU,kBAAkByH,IAAKoC,EAAtC,SAEQb,EAAUtG,KAAK,SAACC,GAAD,aACX,wBAAuB3C,UAAU,wBAAjC,UACI,uBAAOE,KAAK,WAAW+E,MAAOtC,EAAKhB,KAAM+I,eAAgBjB,EAAWe,aAAoD,MAArCf,EAAWe,YAAY7H,EAAKhB,QAC9GgB,EAAKhB,KAEN,sCACM,uBAAOzB,KAAK,SAAS8D,aAAcyF,EAAWe,cAAX,UAA0Bf,EAAWe,YAAY7H,EAAKhB,aAAtD,aAA0B,EAAmCwI,cAL9FxH,EAAKhB,WAY7B,wBAAO3B,UAAU,gBAAjB,6BACoB,uBAAOE,KAAK,WAAWuH,IAAKqC,EAAeY,eAAc,OAAEjB,QAAF,IAAEA,OAAF,EAAEA,EAAYK,sBAGzF,2CAEN,wBAAQ5J,KAAK,SAASC,QAAS,kBAAMkK,KAArC,2BChEN1B,EAAW,SAAC,GAAsB,IAApBhG,EAAmB,EAAnBA,KAAMiG,EAAa,EAAbA,OACtB,OACI,sBAAK5I,UAAU,gCAAf,UACI,4BAAI2C,EAAK2H,QAET,cAAC,OAAD,CAAM7J,GAAE,0BAAqBkC,EAAK2H,OAAStK,UAAU,cAArD,kBACA,wBAAQE,KAAK,SAASF,UAAU,cAAcG,QAAS,kBAAMyI,EAAOjG,IAApE,wBAKGgI,EAnDY,WAAO,IAAD,EACCjE,mBAAS,MADV,mBACrBrD,EADqB,KACbuH,EADa,KAS7B,OANA1D,qBAAU,WACN9D,IACK+D,MAAK,SAACC,GAAawD,EAAUxD,MAC7BC,OAAM,SAAC0C,GAAU/G,QAAQC,IAAI8G,QACnC,IAGC,qCACA,cAAC,EAAD,IACA,sBAAK/J,UAAU,2BAAf,UACI,sDACA,cAAC,OAAD,CAAMS,GAAE,mBAAsBT,UAAU,+CAAxC,SACI,0DAGAqD,GACAA,EAAOX,KAAK,SAAAC,GAAI,OACZ,cAAC,EAAD,CAAUA,KAAMA,EAAuBiG,OAAQiC,GAApBlI,EAAK2H,gBApBnB,SA2BdO,EA3Bc,8EA2B7B,WAA4BlI,GAA5B,iBAAAf,EAAA,sDACQkC,EAAKnB,EAAK2H,MACV1C,OAAOC,QAAQ,kFACfrE,EAAyBM,IACrBgH,EAAYzH,EAAOoF,SACba,OAAQwB,EAAUC,QAAQpI,GAAO,GAE3CiI,EAAUE,IAEV9H,QAAQC,IAAR,oBAAyBa,EAAzB,gBATR,4CA3B6B,wBC+BlBkH,EAlBH,WACV,OACE,cAAC,eAAD,UACE,cAAC,aAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACpF,KAAK,IAAIqF,UAAW1K,IACjC,cAAC,aAAD,CAAYyK,OAAK,EAACpF,KAAK,aAAasF,eAAgB9K,EAAgB6K,UAAWnC,IAC/E,cAAC,aAAD,CAAYkC,OAAK,EAACpF,KAAK,aAAasF,eAAgB9K,EAAgB6K,UAAW5E,IAC/E,cAAC,aAAD,CAAY2E,OAAK,EAACpF,KAAK,wBAAwBsF,eAAgB9K,EAAgB6K,UAAW5E,IAC1F,cAAC,aAAD,CAAY2E,OAAK,EAACpF,KAAK,mBAAmBsF,eAAgB9K,EAAgB6K,UAAWP,IACrF,cAAC,aAAD,CAAYM,OAAK,EAACpF,KAAK,mBAAmBsF,eAAgB9K,EAAgB6K,UAAWE,IACrF,cAAC,aAAD,CAAYH,OAAK,EAACpF,KAAK,2BAA2BsF,eAAgB9K,EAAgB6K,UAAWE,YCzBvGC,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.533a3b1f.chunk.js","sourcesContent":["import { useHistory, useLocation } from 'react-router-dom';\nimport { useContext } from \"react\"; \nimport { AuthContext } from \"@meddbriefer/mdb-auth\";\n\nconst Header = () => {\n  const { currentUser, signOutUser } = useContext(AuthContext);\n  let history = useHistory();\n  let location = useLocation();\n\n  return (\n    <div className=\"title-bar\">\n      <h1>MedDBriefer</h1>\n\n      {location.pathname !== '/' && \n      <button type=\"button\" className=\"back-bttn\" onClick={() => history.goBack()}>Back</button>}\n\n      {currentUser && \n      <button type=\"button\" className=\"sign-out-bttn\" onClick={() => signOutUser()}>Sign out</button>}\n    </div>\n  );\n}\n\nexport default Header;","import Header from \"./Header\"\n\nconst UnauthedLayout = (props) => {\n    return (\n        <>\n        <Header />\n        {props.children}\n        </>\n    )\n}\n\nexport default UnauthedLayout","import React from \"react\"\nimport { Link } from \"react-router-dom\"\n\nimport Header from './Header'\n\nconst HomePage = () => {\n\n  return (\n    <>\n      <Header />\n\n      <div className=\"nav-wrapper\">\n        <Link to=\"/scenarios\">\n          <div className=\"home-nav-button\">Scenario Forms</div>\n        </Link>\n        <Link to=\"/scenario-groups\">\n          <div className=\"home-nav-button\">Scenario Assignments</div>\n        </Link>\n      </div>\n    </>\n  )\n}\n\nexport default HomePage","import firebase from 'firebase/app'\nimport \"firebase/auth\";\nimport \"firebase/firestore\"\n\nexport const firebaseCfg = {\n    apiKey: \"AIzaSyBOgWAbXUGckpad2sk0IUo00hZsV4WxG0E\",\n    authDomain: \"meddbriefer-68cd4.firebaseapp.com\",\n    projectId: \"meddbriefer-68cd4\",\n    storageBucket: \"meddbriefer-68cd4.appspot.com\",\n    messagingSenderId: \"1087114796018\",\n    appId: \"1:1087114796018:web:679fbab38dbf78af0ce96b\",\n    measurementId: \"G-Q7QZKC9KHW\"\n}\n\n// don't reinitialize app if it already exists\nconst firebaseApp = !firebase.apps.length ? firebase.initializeApp(firebaseCfg) : firebase.app()\n\nexport const auth = firebaseApp.auth()\nexport const db = firebaseApp.firestore()\n","import { db } from \"@meddbriefer/mdb-firebase\";\n\nexport const verifyScenarioName = async (name) => {\n    let scenario = await db.collection('scenarios').doc(name).get();\n    return scenario.data() != null;\n}\n\nexport const verifyAssignmentName = async (name) => {\n    let scenario = await db.collection('scenario-assignments').doc(name).get();\n    return scenario.data() != null;\n}\n\nexport const publishScenario = async (name, scenarioObject) => {\n    await db.collection('scenarios').doc(name).set(scenarioObject)\n    alert(`Succesfully published '${name}'.`);\n};\n\nexport const getScenarios = async () => {\n    let collection = await db.collection('scenarios')\n                        .where(\"name\", \"!=\", \"blank-trauma\") // Prevent edit of blank-trauma\n                            .get();\n    return collection.docs.map(item => item.data());\n};\n\nexport const getScenarioWithName = async (name) => {\n    let snapshot = await db.collection('scenarios').doc(name).get();\n    return snapshot.data();\n};\n\nexport const permanentlyDeleteScenario = async (name) => {\n    await db.collection('scenarios').doc(name).delete();\n    console.log(`'${name}' permanently deleted.`);\n    return true;\n};\n\nexport const publishScenarioAssignment = async (name, form) => {\n    await db.collection('scenario-assignments').doc(name).set(form);\n    console.log(`Grouping '${name}' successfully published.`);\n};\n\nexport const getScenarioAssignments = async () => {\n    let groups = await db.collection('scenario-assignments').get();\n    return groups.docs.map(item => item.data());\n};\n\nexport const getScenarioAssignmentWithName = async (name) => {\n    let group = await db.collection('scenario-assignments').doc(name).get();\n    return group.data();\n};\n\nexport const deleteScenarioAssignment = async (name) => {\n    await db.collection('scenario-assignments').doc(name).delete();\n    console.log(`'${name}' group permanently deleted.`);\n};","import classnames from 'classnames';\n\nconst BasicInfo = ({ active, scenario, edit }) => {\n\tconst info = scenario.info;\n  const pt = 'patientInformation';\n\treturn (\n\t\t<div id=\"basic-info\" className={classnames(\"info-wrapper\", {\"scenario-view-hidden\": !active})}>\n\t\t\t<h1>Basic Information:</h1>\n\t\t\t<label>\n\t\t\t\tScenario Title:\n\t\t\t\t<input id=\"name\" type=\"text\" defaultValue={edit ? scenario.name : ''} />\n\t\t\t</label>\n\n\t\t\t<label>\n\t\t\t\tInstructor Info:\n\t\t\t\t<textarea id=\"info-instructorInformation\" defaultValue={info.instructorInformation} />\n\t\t\t</label>\n\n\t\t\t<label>\n\t\t\t\tDispatch Info:<textarea id=\"info-dispatchInfo\" defaultValue={info.dispatchInfo} />\n\t\t\t</label>\n\n\t\t\t<label>\n\t\t\t\tScene assessment:<textarea id=\"info-sceneAssessment\" defaultValue={info.sceneAssessment} />\n\t\t\t</label>\n\n\t\t\t<label>\n\t\t\t\tMaximum time for scenario:<input id=\"info-maxTime\" type=\"number\" placeholder=\"minutes\" defaultValue={info.maxTime} />\n\t\t\t</label>\n\n\t\t\t<h2>Patient Info:</h2>\n\t\t\t<div id=\"pt-info\">\n\t\t\t\t<label>\n\t\t\t\t\tMoulage:<input type=\"text\" id={`info-${pt}-moulage`} defaultValue={info.patientInformation.moulage} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tPosition:<input type=\"text\" id={`info-${pt}-position`} defaultValue={info.patientInformation.position} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tActions:<input type=\"text\" id={`info-${pt}-actions`} defaultValue={info.patientInformation.actions} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default BasicInfo;\n","const ScenarioItem = ({item, scenario}) => {\n  return (\n    item.type === \"heading\" \n    ? \n    <ScenarioHeader item={item} />\n    :  \n    <div className=\"step-item\">\n      {item.type === \"assessment\" \n          ? <Assessment item={item} scenario={scenario} />\n          : <Intervention item={item} scenario={scenario} /> }\n    </div>\n  );\n};\n\nconst ScenarioHeader = ({item}) => {\n  return <div className=\"list-item header-item\">{item.label}</div>;\n};\n\nconst Intervention = ({item, scenario}) => {\n\tconst intervention = scenario.interventions;\n  return (\n    <label>\n      {`'${item.label}':`}\n      <select id={`interventions-${item.id}`}>\n    \t<option hidden>{intervention[item.id]?.toUpperCase()}</option>\n        <option value=\"na\">NA</option>\n        <option value=\"say\">SAY</option>\n        <option value=\"do\">DO</option>\n      </select>\n    </label>\n  );\t\n};\n\nconst Assessment = ({item, scenario}) => {\n\tconst findings = scenario.assessmentFindings\n  return (\n    <label>\n      {`'${item.label}':`}\n      <input\n        type=\"text\"\n        id={`assessmentFindings-${item.id}`}\n        placeholder=\"leave blank if N/A or unremarkable\"\n        defaultValue={findings[item.id]}\n      />\n    </label>\n  );\n};\n\nexport default ScenarioItem;\n","import ScenarioItem from \"./ScenarioItem.js\";\nimport scenarioData from \"../data/trauma-scenario.json\";\nimport classnames from 'classnames';\n\nconst Steplist = ({ active, scenario }) => {\n\treturn (\n\t\t<div id=\"scenario-steps\" className={classnames({\"scenario-view-hidden\": !active})}>\n\t\t\t<h1>Scenario Items</h1>\n\t\t\t{scenarioData.map((item) => (\n\t\t\t\t<ScenarioItem key={item.id} item={item} scenario={scenario} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default Steplist;\n","import classnames from 'classnames';\n\nconst Vitals = ({ active, scenario }) => {\n\treturn (\n\t\t<div className={classnames(\"info-box vitals\", {\"scenario-view-hidden\": !active})}>\n\t\t\t<VitalsBox type=\"init\" header=\"Initial\" scenario={scenario} />\n\t\t\t<VitalsBox type=\"goodVitals\" header=\"Good Reassessment\" scenario={scenario} />\n\t\t\t<VitalsBox type=\"badVitals\" header=\"Bad Reassessment\" scenario={scenario} />\n\t\t</div>\n\t);\n};\n\nconst VitalsBox = ({ scenario, header, type }) => {\n\t// Prefixes and suffixes needed for path\n\treturn (\n\t\t<div className=\"vital-wrapper\">\n\t\t\t<h1> {`${header} Vitals:`} </h1>\n\t\t\t<div className=\"vitals-box\">\n\t\t\t\t<Vital label='BP' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='P' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='R' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='Skin' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='Spo2' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='ETCO2' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='GCS' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='Glucose' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='Pain' type={type} scenario={scenario} />\n\t\t\t\t<Vital label='Temp' type={type} scenario={scenario} />\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nfunction Vital ({scenario, label, type}) {\n\tlet prefix = (type === 'init') ? 'initialVitalSigns' : 'reassessmentVitals';\n\tlet suffix = (prefix === 'initialVitalSigns') ? null : type;\n\tlet path = suffix ? `${prefix}-${label}-${suffix}` : `${prefix}-${label}`;\n\t\n\treturn (\n\t\t<label>\n\t\t\t{label}:\n\t\t\t<input\n\t\t\t\tid={`${path}`}\n\t\t\t\ttype=\"text\"\n\t\t\t\tdefaultValue={suffix ? \n\t\t\t\t\tscenario[prefix][label][suffix] : \n\t\t\t\t\tscenario[prefix][label]}\n\t\t\t/>\n\t\t</label>\n\t);\n}\n\nexport default Vitals;\n","import classnames from 'classnames';\n\nconst SAMPLE = ({ active, scenario }) => {\n\tconst SAMPLE = scenario.SAMPLE;\n\treturn (\n\t\t<div className={classnames(\"info-box\", {\"scenario-view-hidden\": !active})} id=\"sample\">\n\t\t\t<h1>SAMPLE:</h1>\n\n\t\t\t<div className=\"sample\">\n\t\t\t\t<label>\n\t\t\t\t\tS:<input type=\"text\" id=\"SAMPLE-S\" defaultValue={SAMPLE.S} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tA:<input type=\"text\" id=\"SAMPLE-A\" defaultValue={SAMPLE.A} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tM:<input type=\"text\" id=\"SAMPLE-M\" defaultValue={SAMPLE.M} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tP:<input type=\"text\" id=\"SAMPLE-P\" defaultValue={SAMPLE.P} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tL:<input type=\"text\" id=\"SAMPLE-L\" defaultValue={SAMPLE.L} />\n\t\t\t\t</label>\n\t\t\t\t<label>\n\t\t\t\t\tE:<input type=\"text\" id=\"SAMPLE-E\" defaultValue={SAMPLE.E} />\n\t\t\t\t</label>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SAMPLE;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classnames from 'classnames';\n\nimport {\n\tpublishScenario,\n\tgetScenarioWithName,\n\tverifyScenarioName,\n\tpermanentlyDeleteScenario\n} from \"../scripts/connect-firebase.js\";\nimport * as blankTrauma from '../data/blank-trauma.json';\nimport BasicInfo from \"./BasicInfo.js\";\nimport Steplist from \"./Steplist.js\";\nimport Vitals from \"./Vitals\";\nimport SAMPLE from \"./Sample.js\";\n\n/************************ IMPORTANT!! ***************************\n   ID's of each HTML input element are very specifically set.\n   Do not change or it will break the form's saving and loading.\n*****************************************************************/\n\nconst ScenarioForm = (props) => {\n\tconst { scenarioId } = props.match.params;\n\tconst [scenario, setScenario] = useState(); // current state of scenario form\n\tconst [activeTab, setActiveTab] = useState('basic-info'); // current view\n\tconst isActiveTab = (name) => name === activeTab;\n\tconst isEdit = !!scenarioId;\n\tconst formEl = useRef(null);\n\tlet history = useHistory();\n\n\t// Load and apply selected scenario\n\tuseEffect(() => {\n\t\tisEdit ? getScenarioWithName(scenarioId)\n\t\t\t.then((result) => { setScenario(result) })\n\t\t\t.catch((error) => {\tconsole.log(error) })\n\t\t: setScenario(blankTrauma.default);\n\t}, [scenarioId, isEdit]);\n\n\treturn (\n\t\t<div className=\"scenario-form-wrapper\">\n\t\t\t<nav id=\"tab-selector\">\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"basic-info\")})} \n\t\t\t\t\t onClick={() => setActiveTab('basic-info')}>Info</div>\n\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"sample\")})} \n\t\t\t\t\t onClick={() => setActiveTab('sample')}>Sample</div>\n\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"vitals\")})}\n\t\t\t\t\t onClick={() => setActiveTab('vitals')}>Vitals</div>\n\n\t\t\t\t<div className={classnames(\"tab-button\", {\"active-tab\": isActiveTab(\"steplist\")})} \n\t\t\t\t\t onClick={() => setActiveTab('steplist')}>Steplist</div>\n\n\t\t\t\t<button type=\"submit\" id=\"submit-next\" onClick={() => submitForm()}>Submit →</button>\n\t\t\t</nav>\n\n\t\t\t<form id=\"scenario-form\" className=\"scenario-form\" ref={formEl}>\n\t\t\t\t{\n\t\t\t\tscenario ?\n\t\t\t\t<>\n\t\t\t\t\t<BasicInfo \tactive={isActiveTab('basic-info')} \tscenario={scenario} edit={isEdit} />\n\t\t\t\t\t<SAMPLE \tactive={isActiveTab('sample')} \t\tscenario={scenario} />\n\t\t\t\t\t<Vitals \tactive={isActiveTab('vitals')} \t\tscenario={scenario} />\n\t\t\t\t\t<Steplist \tactive={isActiveTab('steplist')}\tscenario={scenario} />\n\t\t\t\t</>\n\t\t\t\t: <p>Loading...</p> // while scenario is loading in\n\t\t\t\t}\n\t\t\t</form>\n\t\t</div>\n\t);\n\n\tasync function submitForm() {\n\t\tlet form = formEl.current;\n\t\t\n\t\tif ( form.name.value == null || form.name.value.trim() === \"\" || ( await verifyScenarioName(form.name.value) && !isEdit ) ) \n\t\t{\n\t\t\t// If scenario exists and not in edit mode\n\t\t\talert('Scenario needs a new name!');\n\t\t}\n\t\telse if (window.confirm(\"Any empty items will be filled with default information. Submit?\"))\n\t\t{\n\t\t\tform = processForm(form);\n\t\t\t(isEdit && form.name !== scenario.name) && permanentlyDeleteScenario(scenario.name); // If there's a name change\n\n\t\t\tpublishScenario(form.name, form); // create new\n\t\t\thistory.goBack(); // Send back once submitted\n\t\t} else \n\t\t{\n\t\t\tconsole.log(\"Submit cancelled.\");\n\t\t}\n\t}\n\n\tfunction processForm(data) {\n\t\tconsole.log('Processing...');\n\t\tlet formLength = Object.keys(data).length;\n\n\t\tlet input, \n\t\tid, \n\t\tpath, \n\t\tnewScenario = JSON.parse(JSON.stringify(scenario || {})); // deep copy of original format (for edits)\n\n\t\tfor(let i=0; i < formLength; i++ ) {\n\t\t\tif (data[i]?.value) { // Don't process empty fields\n\t\t\t\tinput = data[i].value;\n\t\t\t\tid = data[i].id;\n\t\t\t\tpath = id.split('-');\n\n\t\t\t\tif (path[0] === 'assessmentFindings') path = [path[0], id.split('assessmentFindings-').slice(1).toString()];\n\t\t\t\telse if (path[0] === 'interventions') path = [path[0], id.split('interventions-').slice(1).toString()];\n\t\t\t\t// This reconstructs assessmentFindings/interventions paths since id.split('-') breaks them as they include extra hypens.\n\n\t\t\t\t// Handle different object depths\n\t\t\t\tswitch (path.length) {\n\t\t\t\t\tcase 1: newScenario[path[0]] = input; break;\n\t\t\t\t\tcase 2: newScenario[path[0]][path[1]] = input; break;\n\t\t\t\t\tcase 3: newScenario[path[0]][path[1]][path[2]] = input; break;\n\n\t\t\t\t\tdefault: console.log('Path length error:', path.length); break; // Log error\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn newScenario;\n\t}\n};\n\nexport default ScenarioForm;\n","import { React, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getScenarios, permanentlyDeleteScenario } from '../scripts/connect-firebase';\nimport Header from './Header';\n\nconst ScenariosList = () => {\n\tconst [scenarios, setScenarios] = useState();\n\tconst LOADING = <p>Loading...</p>;\n\tlet listIndex = 0;\n\n\tuseEffect(() => {\n\t\tgetScenarios()\n\t\t\t.then((result) => { setScenarios(result) })\n\t\t\t.catch((error) => { console.log(error) })\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\n\t\t\t<div className=\"scenario-list\">\n\t\t\t\t<h1 id='scenario-list-title'>Scenario List</h1>\n\n\t\t\t\t<Link to='/scenario/' className=\"new-scenario-bttn list-scenario-item\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<h1>+</h1>\n\t\t\t\t\t\t<p>Create a New Scenario</p>\n\t\t\t\t\t</div>\n\t\t\t\t</Link>\n\n\t\t\t\t{scenarios \n\t\t\t\t\t? scenarios.map((item) => (\n\t\t\t\t\t\t\titem && <ListItem item={item} key={`${item.name}-list`} remove={deleteScenario} index={listIndex++} />))\n\t\t\t\t \t: LOADING }\n\t\t\t</div>\n\t\t</>\n\t);\n\n\tasync function deleteScenario(index) {\n\t\tlet id = scenarios[index].name;\n\t\tif( window.confirm('Are you sure you want to delete this scenario? This cannot be undone!') ) {\n\t\t\tawait permanentlyDeleteScenario(id);\n\t\t\tlet newList = scenarios.slice(); // deep copy\n\t\t\tnewList.splice(index, 1);\n\t\t\tsetScenarios( newList );\n\t\t} else {\n\t\t\tconsole.log('Delete of', id, 'cancelled');\n\t\t}\n\t}\n};\n\nconst ListItem = ({ item, remove, index }) => {\n\treturn (\n\t\t<div className=\"list-scenario-item\">\n\t\t\t<h1 id=\"title\">{item.name}</h1>\n\t\t\t<p>{item.scenarioType}</p>\n\t\t\t<p>Info: {item.info.instructorInformation ?? \"Not given.\"}</p>\n\n\t\t\t<Link to={`/scenario/${item.name}`} className=\"action-bttn\">Edit</Link>\n\t\t\t<button type=\"button\" className=\"action-bttn\" onClick={() => remove(index) }>Delete</button>\n\t\t</div>\n\t);\n};\n\nexport default ScenariosList;\n","import { getScenarios, \n        getScenarioAssignmentWithName, \n        publishScenarioAssignment,\n        verifyAssignmentName,\n        deleteScenarioAssignment } \nfrom '../scripts/connect-firebase.js';\nimport { useHistory } from \"react-router-dom\";\nimport { useState, useEffect, useRef } from 'react';\nimport Header from './Header';\n\nconst ScenarioAssignment = (props) => {\n    const { groupId } = props.match.params;\n    const [ scenarios, setScenarios ] = useState(null);\n    const [ assignment, setAssignment ] = useState(null);\n    const [ originalId, isEdit ] = [ groupId, !!groupId ];\n    const groupTitle = useRef(null);\n    const checklist = useRef(null);\n    const orderRequired = useRef(null);\n\tlet history = useHistory();\n    \n    useEffect(() => {\n        getScenarios()\n            .then((result) => { \n                setScenarios(result); \n\n                groupId ?\n                getScenarioAssignmentWithName(groupId)\n                    .then((result) => { \n                        setAssignment(result);\n                    })\n                    .catch((err) => console.log(err)) \n                : setAssignment([]);\n\n            })\n            .catch(() => console.log('Scenario loaded error') )\n    }, [groupId]);\n\n    const processAssignment = () => {\n        let form = checklist.current.children;\n        let assignmentObj = {};\n\n        // Get assignments and place in object\n        for(let i=0; i < form.length; i++){\n            if(form[i].children[0].checked)\n                assignmentObj[form[i].children[0].value] = {\n                    id: form[i].children[0].value,\n                    order: parseInt(form[i].children[1].children[0].value) || null\n                };\n        }\n\n        console.log(assignmentObj);\n        \n        return assignmentObj;\n    }\n\n    const handleSubmit = async () => {\n        let title = groupTitle.current.value;\n        \n        let assignmentTasks = processAssignment();\n\n        console.log(assignmentTasks);\n        \n        if ( title.trim() === '' || (await verifyAssignmentName(title) && !isEdit) ) {\n            alert('Group needs a title!');\n            return;\n        }\n\n        (isEdit && originalId !== title) && deleteScenarioAssignment(originalId);\n\n        await publishScenarioAssignment( title, \n            { title: title, orderRequired: orderRequired.current.checked, assignments: assignmentTasks });\n\n        alert(`Published ${groupTitle.current.value}`);\n        history.push('/scenario-groups');\n    };\n\n    return (\n        <>\n        <Header />\n        <div className=\"scenario-assignment\">\n            <h1>Create Scenario Assignment</h1>\n            {\n                assignment ?\n                <>\n                <label className=\"assignment-title\">\n                    Assignment title: <input type=\"text\" ref={groupTitle} defaultValue={groupId} /> \n                </label>\n\n                <div className=\"assignment-list\" ref={checklist}>\n                    {\n                        scenarios.map( (item) => (\n                            <label key={item.name} className=\"assignment-check-item\">\n                                <input type=\"checkbox\" value={item.name} defaultChecked={assignment.assignments && assignment.assignments[item.name] != null}/>\n                                {item.name}\n\n                                <span>\n                                    # <input type=\"number\" defaultValue={assignment.assignments && assignment.assignments[item.name]?.order}/>\n                                </span>\n                            </label>\n                        ))\n                    }\n                </div>\n\n                <label className=\"required-bttn\">\n                    Order required: <input type=\"checkbox\" ref={orderRequired} defaultChecked={assignment?.orderRequired} />\n                </label>\n                </>\n                : <p>Loading...</p>\n            }\n            <button type=\"button\" onClick={() => handleSubmit()}>Submit</button>\n        </div>\n        </>\n    );\n};\n\nexport default ScenarioAssignment;","import { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { getScenarioAssignments, deleteScenarioAssignment } from '../scripts/connect-firebase.js';\nimport Header from './Header';\n\nconst ScenarioGroupsList = () => {\n    const [ groups, setGroups ] = useState(null);\n    \n    useEffect(() => {\n        getScenarioAssignments()\n            .then((result) => { setGroups(result); })\n            .catch((err) => { console.log(err); })\n    }, []);\n\n    return (\n        <>\n        <Header />\n        <div className=\"scenario-assignment-list\">\n            <h1>Scenario Assignments</h1>\n            <Link to={`/scenario-group/`} className=\"new-group-bttn scenario-assignment-list-item\">\n                <p>Create new assignment +</p>\n            </Link>\n            {\n                groups &&\n                groups.map( item => (\n                    <ListItem item={item} key={item.title} remove={handleDelete} />\n                ))\n            }\n        </div>\n        </>\n    );\n\n    async function handleDelete(item) {\n        let id = item.title;    \n        if( window.confirm('Are you sure you want to permanetly delete this group? This cannot be undone!') ){\n            deleteScenarioAssignment(id);\n            let newGroups = groups.slice();\n            newGroups.splice( newGroups.indexOf(item), 1);\n\n            setGroups(newGroups);\n        } else\n            console.log(`Delete of ${id} cancelled.`);\n    }\n};\n\nconst ListItem = ({ item, remove }) => {\n    return (\n        <div className=\"scenario-assignment-list-item\">\n            <p>{item.title}</p>\n\n            <Link to={`/scenario-group/${item.title}`} className=\"action-bttn\" >Edit</Link>\n            <button type=\"button\" className=\"action-bttn\" onClick={() => remove(item)}>Delete</button>\n        </div>\n    );\n}\n\nexport default ScenarioGroupsList;","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { AuthProvider, StaffRoute } from \"@meddbriefer/mdb-auth\";\n\nimport \"./styles/form-styles.scss\";\nimport \"./styles/home-styles.scss\";\nimport \"./styles/assignment-styles.scss\";\n\nimport UnauthedLayout from \"./components/UnauthedLayout\"\n\nimport HomePage from \"./components/HomePage\";\nimport ScenarioForm from \"./components/ScenarioForm\";\nimport ScenariosList from \"./components/ScenariosList\";\nimport ScenarioGroup from './components/ScenarioAssignment';\nimport ScenarioGroupsList from './components/ScenarioAssignmentsList';\n\n\nconst App = () => {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <StaffRoute exact path=\"/scenarios\" authFlowLayout={UnauthedLayout} component={ScenariosList} />\n          <StaffRoute exact path=\"/scenario/\" authFlowLayout={UnauthedLayout} component={ScenarioForm} />\n          <StaffRoute exact path=\"/scenario/:scenarioId\" authFlowLayout={UnauthedLayout} component={ScenarioForm} />\n          <StaffRoute exact path=\"/scenario-groups\" authFlowLayout={UnauthedLayout} component={ScenarioGroupsList} />\n          <StaffRoute exact path=\"/scenario-group/\" authFlowLayout={UnauthedLayout} component={ScenarioGroup} />\n          <StaffRoute exact path=\"/scenario-group/:groupId\" authFlowLayout={UnauthedLayout} component={ScenarioGroup} />\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './App.js';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}